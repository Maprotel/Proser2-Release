{"version":3,"sources":["./src/app/layout/display/display-inbound/display-inbound-routing.module.ts","./src/app/layout/display/display-inbound/display-inbound.component.ts","./src/app/layout/display/display-inbound/display-inbound.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound.component.html","./src/app/layout/display/display-inbound/display-inbound-routing.module.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-agents-historic/display-inbound-agents-historic.component.ts","./src/app/layout/display/display-inbound/display-inbound.module.ts","./src/app/layout/display/display-inbound/display-inbound.module.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-list/display-inbound-list.component.ts","./src/app/layout/display/display-inbound/display-inbound-list/display-inbound-list.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-list/display-inbound-list.component.html","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents-pie/display-inbound-agents-pie.component.ts","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents-pie/display-inbound-agents-pie.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents-pie/display-inbound-agents-pie.component.html","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents.component.ts","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents.component.html","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks-auxiliar/display-inbound-breaks-auxiliar.component.ts","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks-auxiliar/display-inbound-breaks-auxiliar.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks-auxiliar/display-inbound-breaks-auxiliar.component.html","./src/shared/models/display-inbound/DisplayInbound.model.ts","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks.component.ts","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks.component.html","./src/app/layout/display/display-inbound/display-inbound-levels/display-inbound-levels.component.ts","./src/app/layout/display/display-inbound/display-inbound-levels/display-inbound-levels.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-levels/display-inbound-levels.component.html","./src/app/layout/display/display-inbound/display-inbound-calls/display-inbound-calls.component.ts","./src/app/layout/display/display-inbound/display-inbound-calls/display-inbound-calls.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-calls/display-inbound-calls.component.html","./src/shared/services/display-inbound/display-inbound-indicators.service.ts","./src/shared/services/display-inbound/display-inbound-indicators.service.ts.pre-build-optimizer.js","./src/shared/models/display-inbound/DisplayInboundResponse.model.ts","./src/app/layout/display/display-inbound/display-inbound-graph/display-inbound-graph.component.ts","./src/app/layout/display/display-inbound/display-inbound-graph/display-inbound-graph.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-graph/display-inbound-graph.component.html","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents-distribution/display-inbound-agents-distribution.component.ts","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents-distribution/display-inbound-agents-distribution.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-agents/display-inbound-agents-distribution/display-inbound-agents-distribution.component.html","./src/app/layout/display/display-inbound/display-inbound-highlights/display-inbound-highlights.component.ts","./src/app/layout/display/display-inbound/display-inbound-highlights/display-inbound-highlights.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-highlights/display-inbound-highlights.component.html","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks-assignations/display-inbound-breaks-assignations.component.ts","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks-assignations/display-inbound-breaks-assignations.component.ts.pre-build-optimizer.js","./src/app/layout/display/display-inbound/display-inbound-breaks/display-inbound-breaks-assignations/display-inbound-breaks-assignations.component.html"],"names":["routes","path","component","alertService","envService","userSelectionService","ngOnInit","setReportTitles","DisplayInboundComponent","ɵfac","t","ɵcmp","type","directives","styles","children","DisplayInboundRoutingModule","ɵmod","ɵinj","factory","forChild","DisplayInboundModule","provide","useValue","forRoot","DisplayInboundListComponent_main_11_section_1_Template","rf","ctx","ctx_r1","DisplayInboundListComponent_main_11_Template","ctx_r0","displayInboundIndicatorsService","modalService","subscription","faIdBadge","faClock","alertMessage","show_columns","show","selected","historic","graph","show_graph_or_table_button","this","env","model","currentDate","Date","format","rows","rows_original","userSelection","selectorVisibleFields","assignation","auxiliar","getReportList","filterFieldList","fieldList","numberOfRowsInTable","id","value","exportName","initialSelectedFilterField","field_name","name","text","onRepeat","ngOnDestroy","unsubscribe","timerComponent","timerClock","add","subscribe","start_date","timerConnected","setHeaderInfo","title","options","legend","current_date","userSelectionTemp","res","console","error","status","alertTitle","alertText","statusText","alertShow","alertClass","getDisplayShow","JSON","parse","pro_show_display_selection","openDetailModal","content","activeModal","open","windowClass","keyboard","onShowHideGraphButtons","onActivate","event","row_selection","row","onSelect","onReturnHeaderResult","childGraph","generateGraph","onRecalculate","onReturnNumberOfRowsInTable","onReturnRowsForTable","onObjectToArray","data","output","obj","undefined","Object","entries","map","key","onCreateModel","x","newModel","stringify","newModel2","replace","model3","eval","openModal","DisplayInboundListComponent","_t","first","highligthts","decls","vars","consts","template","pipes","DisplayInboundAgentsPieComponent_div_0_Template","pieChartOptions","responsive","position","plugins","datalabels","formatter","chart","labels","dataIndex","pieChartLabels","pieChartData","pieChartType","pieChartLegend","pieChartColors","backgroundColor","color","chartClicked","active","chartHovered","getColor","getValues","getLabels","size","ariaLabelledBy","DisplayInboundAgentsPieComponent","DisplayInboundAgentsComponent","DisplayInboundBreaksAuxiliarComponent_p_1_Template","DisplayInboundBreaksAuxiliarComponent_article_3_ul_1_Template","item_r3","$implicit","DisplayInboundBreaksAuxiliarComponent_article_3_Template","selectLine","selected_break","DisplayInboundBreaksAuxiliarComponent","displayInboundCallsIndicators","displayInboundCurrentCallsIndicators","agentsPlannedTotal","agentsConnectedTotal","agentsConnectedByGroup","agentsAuxiliarResume","agentsAssignationResume","fieldInfo","filter","DisplayInboundBreaksComponent_p_2_Template","DisplayInboundBreaksComponent","DisplayInboundLevelsComponent_section_1_Template","DisplayInboundLevelsComponent","DisplayInboundCallsComponent_section_1_Template","DisplayInboundCallsComponent","http","headers","handleError","accessToken","localStorage","getItem","post","loopbackApiUrl","pipe","query","getReportListHistoric","DisplayInboundIndicatorsService","ɵprov","token","now","day_name","week_day","start_time","end_time","idealResponseTime","shortTimeDef","inboundReceived","inboundAbandoned","inboundAttended","inboundShort","inboundBeforeTime","inboundAfterTime","inboundHungAgent","inboundServiceLevel","inboundAttentionLevel","inboundAbandonLevel","operation_seconds","operation_time","wait_seconds","wait_time","inboundTmo","inboundAsa","callsActive","callsOnQueue","agentsEffectiveTotal","agentsLoggedTotal","agentHistoricResume","concept","count_agents","duration_agents","average_agents","duration","DisplayInboundGraphComponent_div_0_Template","valueChange","interval","barChartType","extractIndicators","llamadas_atendidas","llamadas_abandonadas","llamadas_atendidas_antes_de","llamadas_atendidas_despues_de","nivel_servicio","nivel_atencion","graphLabel","msg","barChartData","graphIndicators","nivel_de_servicio","nivel_de_atencion","barChartLabels","barChartOptions","scaleShowVerticalLines","scales","xAxes","scaleFontSize","ticks","fontSize","stacked","scaleLabel","display","labelString","yAxes","scalePositionLeft","min","stepSize","stepinterval","max","label","borderColor","yAxesGroup","yAxisID","fill","DisplayInboundGraphComponent","_c0","a0","DisplayInboundAgentsDistributionComponent_ul_1_Template","item_r1","faUser","getTotal","reduce","y","mergeColor","array1","colors","index","DisplayInboundAgentsDistributionComponent","DisplayInboundHighlightsComponent_main_0_div_2_Template","DisplayInboundHighlightsComponent_main_0_div_4_Template","ctx_r2","DisplayInboundHighlightsComponent_main_0_div_6_Template","ctx_r3","DisplayInboundHighlightsComponent_main_0_Template","invScaleService","onExtractVariables","onColorClass","DisplayInboundHighlightsComponent","DisplayInboundBreaksAssignationsComponent_p_1_Template","DisplayInboundBreaksAssignationsComponent_article_3_ul_1_Template","_r5","DisplayInboundBreaksAssignationsComponent_article_3_Template","DisplayInboundBreaksAssignationsComponent"],"mappings":"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","file":"8.2d70fb31c0833ba2baef.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DisplayInboundComponent } from \"./display-inbound.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: DisplayInboundComponent,\n    children: []\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DisplayInboundRoutingModule {}\n\n/*\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AssignationReportComponent } from './assignation-report.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: AssignationReportComponent,\n    children: [\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\n*/\n","import { Component, OnInit, EventEmitter, Output } from \"@angular/core\";\n\nimport { AlertModel } from \"shared/models/helpers/Alert\";\nimport {\n  AlertService,\n  EnvService,\n  UserSelectionService\n} from \"shared/services\";\nimport { UserSelectionModel } from \"shared/models\";\n\n@Component({\n  selector: \"app-display-display-inbound\",\n  templateUrl: \"./display-inbound.component.html\",\n  styleUrls: [\"./display-inbound.component.scss\"]\n})\nexport class DisplayInboundComponent implements OnInit {\n  userSelection: UserSelectionModel;\n  selectorVisibleFields: UserSelectionModel;\n  title;\n\n  constructor(\n    private alertService: AlertService,\n    private envService: EnvService,\n    private userSelectionService: UserSelectionService\n  ) {\n    // this.userSelection = new UserSelectionModel(\"userSelection\");\n    // // this.selectorVisibleFields = new UserSelectionModel(\"visible\");\n    // this.title = \"Display llamadas entrantes\";\n  }\n\n  ngOnInit() {\n\n  }\n\n  setReportTitles() {\n\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { AlertService, EnvService, UserSelectionService } from \"shared/services\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"shared/services\";\nimport * as i2 from \"./display-inbound-list/display-inbound-list.component\";\nvar DisplayInboundComponent = /** @class */ (function () {\n    function DisplayInboundComponent(alertService, envService, userSelectionService) {\n        this.alertService = alertService;\n        this.envService = envService;\n        this.userSelectionService = userSelectionService;\n        // this.userSelection = new UserSelectionModel(\"userSelection\");\n        // // this.selectorVisibleFields = new UserSelectionModel(\"visible\");\n        // this.title = \"Display llamadas entrantes\";\n    }\n    DisplayInboundComponent.prototype.ngOnInit = function () {\n    };\n    DisplayInboundComponent.prototype.setReportTitles = function () {\n    };\n    DisplayInboundComponent.ɵfac = function DisplayInboundComponent_Factory(t) { return new (t || DisplayInboundComponent)(i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i1.EnvService), i0.ɵɵdirectiveInject(i1.UserSelectionService)); };\n    DisplayInboundComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundComponent, selectors: [[\"app-display-display-inbound\"]], decls: 1, vars: 0, template: function DisplayInboundComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelement(0, \"app-display-display-inbound-list\");\n        } }, directives: [i2.DisplayInboundListComponent], styles: [\"\"] });\n    return DisplayInboundComponent;\n}());\nexport { DisplayInboundComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-display-inbound\",\n                templateUrl: \"./display-inbound.component.html\",\n                styleUrls: [\"./display-inbound.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.AlertService }, { type: i1.EnvService }, { type: i1.UserSelectionService }]; }, null); })();\n","<app-display-display-inbound-list>\n</app-display-display-inbound-list>","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DisplayInboundComponent } from \"./display-inbound.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nvar routes = [\n    {\n        path: \"\",\n        component: DisplayInboundComponent,\n        children: []\n    }\n];\nvar DisplayInboundRoutingModule = /** @class */ (function () {\n    function DisplayInboundRoutingModule() {\n    }\n    DisplayInboundRoutingModule.ɵmod = i0.ɵɵdefineNgModule({ type: DisplayInboundRoutingModule });\n    DisplayInboundRoutingModule.ɵinj = i0.ɵɵdefineInjector({ factory: function DisplayInboundRoutingModule_Factory(t) { return new (t || DisplayInboundRoutingModule)(); }, imports: [[RouterModule.forChild(routes)],\n            RouterModule] });\n    return DisplayInboundRoutingModule;\n}());\nexport { DisplayInboundRoutingModule };\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DisplayInboundRoutingModule, { imports: [i1.RouterModule], exports: [RouterModule] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundRoutingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [RouterModule.forChild(routes)],\n                exports: [RouterModule]\n            }]\n    }], null, null); })();\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-display-display-inbound-agents-historic',\n  templateUrl: './display-inbound-agents-historic.component.html',\n  styleUrls: ['./display-inbound-agents-historic.component.scss']\n})\nexport class DisplayInboundAgentsHistoricComponent implements OnInit {\n  @Input() userSelection;\n  @Input() rows;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeEs from \"@angular/common/locales/es\";\nregisterLocaleData(localeEs, \"es\");\nimport { LOCALE_ID } from \"@angular/core\";\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AlertModule } from \"shared/modules/alert/alert.module\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport * as Chart from \"chart.js\";\nimport * as ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { ChartsModule as Ng2Charts } from \"ng2-charts\";\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { SelectorModule } from \"shared/modules/selector/selector.module\";\n\nimport { DisplayHeaderModule } from \"sections/display/src/shared/modules/display-header/display-header.module\";\n\nimport { DisplayInboundRoutingModule } from \"./display-inbound-routing.module\";\nimport { DisplayInboundComponent } from \"./display-inbound.component\";\nimport { DisplayInboundListComponent } from \"./display-inbound-list/display-inbound-list.component\";\nimport { DisplayInboundGraphComponent } from \"./display-inbound-graph/display-inbound-graph.component\";\nimport { DisplayInboundCallsComponent } from \"./display-inbound-calls/display-inbound-calls.component\";\n\nimport { DisplayInboundLevelsComponent } from \"./display-inbound-levels/display-inbound-levels.component\";\n\nimport { DisplayInboundBreaksComponent } from \"./display-inbound-breaks/display-inbound-breaks.component\";\nimport { DisplayInboundBreaksAuxiliarComponent } from \"./display-inbound-breaks/display-inbound-breaks-auxiliar/display-inbound-breaks-auxiliar.component\";\nimport { DisplayInboundBreaksAssignationsComponent } from \"./display-inbound-breaks/display-inbound-breaks-assignations/display-inbound-breaks-assignations.component\";\n\nimport { DisplayInboundHighlightsComponent } from \"./display-inbound-highlights/display-inbound-highlights.component\";\nimport { DisplayInboundAgentsComponent } from \"./display-inbound-agents/display-inbound-agents.component\";\nimport { DisplayInboundAgentsPieComponent } from \"./display-inbound-agents/display-inbound-agents-pie/display-inbound-agents-pie.component\";\nimport { DisplayInboundAgentsDistributionComponent } from \"./display-inbound-agents/display-inbound-agents-distribution/display-inbound-agents-distribution.component\";\n\nimport { DisplayInboundHighlightsHistoricComponent } from \"./display-inbound-highlights-historic/display-inbound-highlights-historic.component\";\nimport { DisplayInboundBreaksHistoricComponent } from \"./display-inbound-breaks-historic/display-inbound-breaks-historic.component\";\nimport { DisplayInboundBreaksAuxiliarHistoricComponent } from \"./display-inbound-breaks-historic/display-inbound-breaks-auxiliar-historic/display-inbound-breaks-auxiliar-historic.component\";\nimport { DisplayInboundBreaksAssignationsHistoricComponent } from \"./display-inbound-breaks-historic/display-inbound-breaks-assignations-historic/display-inbound-breaks-assignations-historic.component\";\nimport { DisplayInboundAgentsHistoricComponent } from \"./display-inbound-agents-historic/display-inbound-agents-historic.component\";\nimport { SharedPipesModule } from \"shared/pipes/shared-pipes.module\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\n\n@NgModule({\n  declarations: [\n    DisplayInboundComponent,\n    DisplayInboundListComponent,\n    DisplayInboundGraphComponent,\n    DisplayInboundCallsComponent,\n    DisplayInboundLevelsComponent,\n    DisplayInboundBreaksComponent,\n    DisplayInboundBreaksAuxiliarComponent,\n    DisplayInboundBreaksAssignationsComponent,\n    DisplayInboundHighlightsComponent,\n    DisplayInboundAgentsComponent,\n    DisplayInboundAgentsPieComponent,\n    DisplayInboundAgentsDistributionComponent,\n    DisplayInboundHighlightsHistoricComponent,\n    DisplayInboundBreaksHistoricComponent,\n    DisplayInboundBreaksAuxiliarHistoricComponent,\n    DisplayInboundBreaksAssignationsHistoricComponent,\n    DisplayInboundAgentsHistoricComponent\n  ],\n  imports: [\n    CommonModule,\n\n    AlertModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    NgSelectModule,\n    NgxDatatableModule,\n    Ng2Charts,\n\n    SharedPipesModule,\n\n    SelectorModule,\n    DisplayHeaderModule,\n\n    FontAwesomeModule,\n\n    DisplayInboundRoutingModule\n  ],\n  providers: [{ provide: LOCALE_ID, useValue: \"es\" }]\n})\nexport class DisplayInboundModule { }\n","import { registerLocaleData } from \"@angular/common\";\nimport localeEs from \"@angular/common/locales/es\";\nimport { LOCALE_ID } from \"@angular/core\";\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AlertModule } from \"shared/modules/alert/alert.module\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { ChartsModule as Ng2Charts } from \"ng2-charts\";\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { SelectorModule } from \"shared/modules/selector/selector.module\";\nimport { DisplayHeaderModule } from \"sections/display/src/shared/modules/display-header/display-header.module\";\nimport { DisplayInboundRoutingModule } from \"./display-inbound-routing.module\";\nimport { DisplayInboundComponent } from \"./display-inbound.component\";\nimport { DisplayInboundListComponent } from \"./display-inbound-list/display-inbound-list.component\";\nimport { DisplayInboundGraphComponent } from \"./display-inbound-graph/display-inbound-graph.component\";\nimport { DisplayInboundCallsComponent } from \"./display-inbound-calls/display-inbound-calls.component\";\nimport { DisplayInboundLevelsComponent } from \"./display-inbound-levels/display-inbound-levels.component\";\nimport { DisplayInboundBreaksComponent } from \"./display-inbound-breaks/display-inbound-breaks.component\";\nimport { DisplayInboundBreaksAuxiliarComponent } from \"./display-inbound-breaks/display-inbound-breaks-auxiliar/display-inbound-breaks-auxiliar.component\";\nimport { DisplayInboundBreaksAssignationsComponent } from \"./display-inbound-breaks/display-inbound-breaks-assignations/display-inbound-breaks-assignations.component\";\nimport { DisplayInboundHighlightsComponent } from \"./display-inbound-highlights/display-inbound-highlights.component\";\nimport { DisplayInboundAgentsComponent } from \"./display-inbound-agents/display-inbound-agents.component\";\nimport { DisplayInboundAgentsPieComponent } from \"./display-inbound-agents/display-inbound-agents-pie/display-inbound-agents-pie.component\";\nimport { DisplayInboundAgentsDistributionComponent } from \"./display-inbound-agents/display-inbound-agents-distribution/display-inbound-agents-distribution.component\";\nimport { DisplayInboundHighlightsHistoricComponent } from \"./display-inbound-highlights-historic/display-inbound-highlights-historic.component\";\nimport { DisplayInboundBreaksHistoricComponent } from \"./display-inbound-breaks-historic/display-inbound-breaks-historic.component\";\nimport { DisplayInboundBreaksAuxiliarHistoricComponent } from \"./display-inbound-breaks-historic/display-inbound-breaks-auxiliar-historic/display-inbound-breaks-auxiliar-historic.component\";\nimport { DisplayInboundBreaksAssignationsHistoricComponent } from \"./display-inbound-breaks-historic/display-inbound-breaks-assignations-historic/display-inbound-breaks-assignations-historic.component\";\nimport { DisplayInboundAgentsHistoricComponent } from \"./display-inbound-agents-historic/display-inbound-agents-historic.component\";\nimport { SharedPipesModule } from \"shared/pipes/shared-pipes.module\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nregisterLocaleData(localeEs, \"es\");\nvar DisplayInboundModule = /** @class */ (function () {\n    function DisplayInboundModule() {\n    }\n    DisplayInboundModule.ɵmod = i0.ɵɵdefineNgModule({ type: DisplayInboundModule });\n    DisplayInboundModule.ɵinj = i0.ɵɵdefineInjector({ factory: function DisplayInboundModule_Factory(t) { return new (t || DisplayInboundModule)(); }, providers: [{ provide: LOCALE_ID, useValue: \"es\" }], imports: [[\n                CommonModule,\n                AlertModule,\n                FormsModule,\n                ReactiveFormsModule,\n                NgbModule.forRoot(),\n                NgSelectModule,\n                NgxDatatableModule,\n                Ng2Charts,\n                SharedPipesModule,\n                SelectorModule,\n                DisplayHeaderModule,\n                FontAwesomeModule,\n                DisplayInboundRoutingModule\n            ]] });\n    return DisplayInboundModule;\n}());\nexport { DisplayInboundModule };\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DisplayInboundModule, { declarations: [DisplayInboundComponent,\n        DisplayInboundListComponent,\n        DisplayInboundGraphComponent,\n        DisplayInboundCallsComponent,\n        DisplayInboundLevelsComponent,\n        DisplayInboundBreaksComponent,\n        DisplayInboundBreaksAuxiliarComponent,\n        DisplayInboundBreaksAssignationsComponent,\n        DisplayInboundHighlightsComponent,\n        DisplayInboundAgentsComponent,\n        DisplayInboundAgentsPieComponent,\n        DisplayInboundAgentsDistributionComponent,\n        DisplayInboundHighlightsHistoricComponent,\n        DisplayInboundBreaksHistoricComponent,\n        DisplayInboundBreaksAuxiliarHistoricComponent,\n        DisplayInboundBreaksAssignationsHistoricComponent,\n        DisplayInboundAgentsHistoricComponent], imports: [CommonModule,\n        AlertModule,\n        FormsModule,\n        ReactiveFormsModule, i1.NgbModule, NgSelectModule,\n        NgxDatatableModule,\n        Ng2Charts,\n        SharedPipesModule,\n        SelectorModule,\n        DisplayHeaderModule,\n        FontAwesomeModule,\n        DisplayInboundRoutingModule] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    DisplayInboundComponent,\n                    DisplayInboundListComponent,\n                    DisplayInboundGraphComponent,\n                    DisplayInboundCallsComponent,\n                    DisplayInboundLevelsComponent,\n                    DisplayInboundBreaksComponent,\n                    DisplayInboundBreaksAuxiliarComponent,\n                    DisplayInboundBreaksAssignationsComponent,\n                    DisplayInboundHighlightsComponent,\n                    DisplayInboundAgentsComponent,\n                    DisplayInboundAgentsPieComponent,\n                    DisplayInboundAgentsDistributionComponent,\n                    DisplayInboundHighlightsHistoricComponent,\n                    DisplayInboundBreaksHistoricComponent,\n                    DisplayInboundBreaksAuxiliarHistoricComponent,\n                    DisplayInboundBreaksAssignationsHistoricComponent,\n                    DisplayInboundAgentsHistoricComponent\n                ],\n                imports: [\n                    CommonModule,\n                    AlertModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    NgbModule.forRoot(),\n                    NgSelectModule,\n                    NgxDatatableModule,\n                    Ng2Charts,\n                    SharedPipesModule,\n                    SelectorModule,\n                    DisplayHeaderModule,\n                    FontAwesomeModule,\n                    DisplayInboundRoutingModule\n                ],\n                providers: [{ provide: LOCALE_ID, useValue: \"es\" }]\n            }]\n    }], null, null); })();\n","// Angular import\nimport { Component, OnInit, Input, ViewChild } from \"@angular/core\";\n\n// Installed modules\nimport { Observable, Subscription, timer } from \"rxjs\";\nimport * as moment from \"moment\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\n\n// Global shared functions import\nimport { getUpdateFilter } from \"shared/functions\";\nimport { objectDateToTextDate, textDateToObjectDate } from \"shared/functions\";\n\n// Global shared models\nimport { AlertModel } from \"shared/models/helpers/Alert\";\nimport { UserSelectionModel } from \"shared/models\";\n\n// Global shared services\nimport { AlertService, EnvService } from \"shared/services\";\nimport { UserSelectionService } from \"shared/services/crud/system/user-selection.service\";\n\n// Local models\nimport { DisplayInboundResponseModel } from \"sections/display/src/shared/models/display-inbound/DisplayInboundResponse.model\";\n\n// Local shared\nimport { DisplayInboundGraphComponent } from \"../display-inbound-graph/display-inbound-graph.component\";\n\nimport { DisplayInboundModel } from \"sections/display/src/shared/models/display-inbound/DisplayInbound.model\";\nimport { DisplayInboundIndicatorsService } from \"sections/display/src/shared/services/display-inbound/display-inbound-indicators.service\";\nimport { DisplayInboundHighlightsComponent } from \"../display-inbound-highlights/display-inbound-highlights.component\";\n\nimport { faIdBadge, faClock } from \"@fortawesome/free-solid-svg-icons\";\n\n@Component({\n  selector: \"app-display-display-inbound-list\",\n  templateUrl: \"./display-inbound-list.component.html\",\n  styleUrls: [\"./display-inbound-list.component.scss\"]\n})\nexport class DisplayInboundListComponent implements OnInit {\n  // Subscription\n  private subscription: Subscription = new Subscription();\n  // Child components\n  @ViewChild(DisplayInboundGraphComponent)\n  private childGraph: DisplayInboundGraphComponent;\n\n  @ViewChild(DisplayInboundHighlightsComponent)\n  private highligthts: DisplayInboundHighlightsComponent;\n\n  timerComponent;\n  timerClock;\n\n  // Variables that come from main component\n  userSelection: UserSelectionModel;\n  selectorVisibleFields: UserSelectionModel;\n\n  // Icon\n  faIdBadge = faIdBadge;\n  faClock = faClock;\n\n  // Component variables\n  alertMessage = new AlertModel();\n  env;\n\n  // Selector variables\n  local_store;\n\n  // Realtime variables\n  timerConnected;\n  currentDate;\n\n  // Show variables\n  show_columns = false; // shows or hides a colum\n  show = false; // shows or hides the table\n  selected = [];\n  idealResponseTime;\n  historic = false;\n\n  // Filter variables\n  numberOfRowsInTable;\n  filterFieldList;\n  initialSelectedFilterField;\n  findInList;\n\n  // Variable to display values\n  model: DisplayInboundModel;\n  rows: DisplayInboundResponseModel;\n  rows_original: DisplayInboundResponseModel;\n  rows_total;\n  rows_detail;\n  rows_detail_original;\n  rows_detail_total;\n  row_selection;\n  exportName;\n\n  // Modal window variables\n  activeModal: NgbActiveModal;\n\n  // Graph variables\n  graph = false;\n  show_graph_or_table_button = false;\n\n  // Init\n  constructor(\n    private displayInboundIndicatorsService: DisplayInboundIndicatorsService,\n    private alertService: AlertService,\n    private envService: EnvService,\n    private modalService: NgbModal,\n    private userSelectionService: UserSelectionService\n  ) {\n    this.env = envService;\n    this.model = new DisplayInboundModel();\n\n    this.currentDate = moment(new Date()).format(\"YYYY-MM-DD\");\n    this.rows = new DisplayInboundResponseModel();\n    this.rows_original = new DisplayInboundResponseModel();\n\n    this.userSelection = new UserSelectionModel(\"userSelection\");\n    this.selectorVisibleFields = new UserSelectionModel(\"visible\");\n\n    this.selectorVisibleFields.assignation = false;\n    this.selectorVisibleFields.auxiliar = false;\n  }\n\n  // Start\n  ngOnInit() {\n    this.getReportList();\n    this.filterFieldList = this.model.fieldList();\n    this.numberOfRowsInTable = { id: 10, value: 10 };\n    this.exportName = \"reporte-conexión\";\n\n    this.initialSelectedFilterField = {\n      field_name: \"start_date\",\n      name: \"fecha_inicio\",\n      text: \"Fecha desde\"\n    };\n    this.onRepeat();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    // this.timerComponent.unsubscribe();\n    // this.timerClock.unsubscribe();\n  }\n\n  onRepeat() {\n    if (true) {\n      this.timerComponent = timer(1000, 5000);\n      this.timerClock = timer(1000, 1000);\n\n      this.getReportList();\n      this.subscription.add(\n        this.timerComponent.subscribe(() => {\n          if (\n            objectDateToTextDate(this.userSelection.start_date) ===\n            this.currentDate\n          ) {\n            this.getReportList();\n          } else {\n          }\n        })\n      );\n\n      this.timerClock.subscribe(() => {\n        this.timerConnected = this.timerConnected + 1;\n      });\n    } else {\n      this.subscription.unsubscribe();\n      // this.timerComponent.unsubscribe();\n      // this.timerClock.unsubscribe();\n    }\n  }\n\n  setHeaderInfo(userSelection) {\n    userSelection.title = \"Display de llamadas entrantes\";\n    userSelection.options = \"-\";\n    userSelection.legend = \"-\";\n    userSelection.current_date = moment().format('YYYY-MM-DD');\n    return userSelection;\n  }\n\n  // Get records from backend\n  getReportList() {\n    let userSelectionTemp = new UserSelectionModel(\"userSelection\");\n    this.userSelection = this.setHeaderInfo(userSelectionTemp);\n\n    this.displayInboundIndicatorsService\n      .getReportList(this.userSelection)\n      .subscribe(\n        (res: DisplayInboundResponseModel) => {\n          this.timerConnected = 0;\n\n          if (res) {\n            this.rows = res;\n            this.userSelection = res.userSelection;\n\n          } else {\n            console.error(\"Error\", res);\n          }\n          this.alertMessage = new AlertModel();\n        },\n        error => {\n          console.error(\"Error\", error);\n          this.show = false;\n          this.alertService.error(error.status);\n          this.alertMessage.alertTitle = \"Error del servidor\";\n          this.alertMessage.alertText = error.statusText;\n          this.alertMessage.alertShow = true;\n          this.alertMessage.alertClass =\n            \"alert alert-danger alert-dismissible fade show\";\n        }\n      );\n  }\n\n  // Get records from backend\n  getDisplayShow(userSelection) {\n    if (userSelection) {\n      this.displayInboundIndicatorsService\n        .getDisplayShow(userSelection)\n        .subscribe(\n          res => {\n            if (res) {\n              let temp = res[0].pro_show_display_selection;\n              let temp2 = JSON.parse(temp);\n              return temp2;\n            } else {\n              return this.userSelection;\n            }\n            this.alertMessage = new AlertModel();\n          },\n          error => {\n            console.error(\"Error\", error);\n            this.show = false;\n            this.alertService.error(error.status);\n            this.alertMessage.alertTitle = \"Error del servidor\";\n            this.alertMessage.alertText = error.statusText;\n            this.alertMessage.alertShow = true;\n            this.alertMessage.alertClass =\n              \"alert alert-danger alert-dismissible fade show\";\n          }\n        );\n    }\n  }\n\n  // Show modal detail window\n  openDetailModal(content, selected) {\n    this.activeModal = this.modalService.open(content, {\n      windowClass: \"my-class\",\n      keyboard: false\n    });\n  }\n\n  // Show or hide graph or table buttons\n  onShowHideGraphButtons() {\n    this.graph = !this.graph;\n    this.show_graph_or_table_button = !this.show_graph_or_table_button;\n  }\n  // Data table activate\n  onActivate(event) {\n    this.row_selection = event.row;\n    if (event.type === \"dblclick\") {\n    }\n  }\n  // Datatable select\n  onSelect(event) {\n    this.selected = event.selected;\n  }\n\n  // Update on return of selector in header\n  onReturnHeaderResult(event) {\n    this.userSelection = new UserSelectionModel(\"userSelection\");\n    this.getReportList();\n    this.show_graph_or_table_button = false;\n    this.childGraph ? this.childGraph.generateGraph(\"header\", this.rows) : \"\";\n  }\n\n  // Activated by button\n  onRecalculate(event) {\n    this.userSelection = new UserSelectionModel(\"userSelection\");\n    this.getReportList();\n    this.show_graph_or_table_button = false;\n    console.error(\"this.rows\", this.rows);\n\n    this.childGraph ? this.childGraph.generateGraph(\"button\", this.rows) : \"\";\n  }\n\n  // Response report finder to display number of rows in table\n  onReturnNumberOfRowsInTable(event) {\n    console.error(\"event\", event);\n    this.numberOfRowsInTable = event;\n  }\n\n  // Response report finder\n  onReturnRowsForTable(event) {\n    this.rows = event;\n  }\n\n  // Helper function to expose detail fields from a row\n  onObjectToArray(data) {\n    let obj = data[0];\n\n    let output;\n    if (obj !== undefined) {\n      output = Object.entries(obj).map(([key, value]) => ({\n        key,\n        value\n      }));\n    }\n    return output;\n  }\n\n  // temporary method to generate excel map for exporting model\n  onCreateModel(model?) {\n    model = new DisplayInboundModel().fieldList();\n\n    console.error(\"model\", model);\n\n    let obj = {};\n\n    model.map(x => {\n      obj[`${x.name}`] = \"x.\" + x.field_name;\n    });\n\n    let newModel = JSON.stringify(obj);\n    let newModel2 = JSON.stringify(\n      newModel\n        .replace(/\\\"/g, \"\")\n        .replace(/:/g, \": \")\n        .replace(/,/g, \",\\n \")\n    );\n    let model3 = eval(newModel2);\n\n    console.error(\"model\", model3);\n  }\n\n  //Test function for modal\n  openModal(content) {\n    // this.rows_detail = this.rows_detail_original.filter(x => {\n    //   return x.agent_id === this.row_selection.agent_id;\n    // });\n    // this.rows_detail_total = this.rows_original.filter(x => {\n    //   return x.agent_id === this.row_selection.agent_id;\n    // });\n    // this.activeModal = this.modalService.open(content, {\n    //   windowClass: \"my-class\",\n    //   keyboard: false\n    // });\n  }\n}\n","// Angular import\nimport { Component, ViewChild } from \"@angular/core\";\n// Installed modules\nimport { Subscription, timer } from \"rxjs\";\nimport * as moment from \"moment\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { objectDateToTextDate } from \"shared/functions\";\n// Global shared models\nimport { AlertModel } from \"shared/models/helpers/Alert\";\nimport { UserSelectionModel } from \"shared/models\";\n// Global shared services\nimport { AlertService, EnvService } from \"shared/services\";\nimport { UserSelectionService } from \"shared/services/crud/system/user-selection.service\";\n// Local models\nimport { DisplayInboundResponseModel } from \"sections/display/src/shared/models/display-inbound/DisplayInboundResponse.model\";\n// Local shared\nimport { DisplayInboundGraphComponent } from \"../display-inbound-graph/display-inbound-graph.component\";\nimport { DisplayInboundModel } from \"sections/display/src/shared/models/display-inbound/DisplayInbound.model\";\nimport { DisplayInboundIndicatorsService } from \"sections/display/src/shared/services/display-inbound/display-inbound-indicators.service\";\nimport { DisplayInboundHighlightsComponent } from \"../display-inbound-highlights/display-inbound-highlights.component\";\nimport { faIdBadge, faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"sections/display/src/shared/services/display-inbound/display-inbound-indicators.service\";\nimport * as i2 from \"shared/services\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"shared/services/crud/system/user-selection.service\";\nimport * as i5 from \"../../../../../../../../shared/modules/alert/alert.component\";\nimport * as i6 from \"../../../../../shared/modules/display-header/display-header.component\";\nimport * as i7 from \"@fortawesome/angular-fontawesome\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../display-inbound-calls/display-inbound-calls.component\";\nimport * as i10 from \"../display-inbound-levels/display-inbound-levels.component\";\nimport * as i11 from \"../display-inbound-agents/display-inbound-agents.component\";\nimport * as i12 from \"../display-inbound-breaks/display-inbound-breaks.component\";\nimport * as i13 from \"../display-inbound-highlights/display-inbound-highlights.component\";\nfunction DisplayInboundListComponent_main_11_section_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 14);\n    i0.ɵɵelementStart(1, \"article\");\n    i0.ɵɵelement(2, \"app-display-inbound-highlights\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"rows\", ctx_r1.rows);\n} }\nfunction DisplayInboundListComponent_main_11_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"main\", 8);\n    i0.ɵɵtemplate(1, DisplayInboundListComponent_main_11_section_1_Template, 3, 1, \"section\", 9);\n    i0.ɵɵelementStart(2, \"section\");\n    i0.ɵɵelementStart(3, \"div\", 10);\n    i0.ɵɵelementStart(4, \"article\", 11);\n    i0.ɵɵelement(5, \"app-display-inbound-calls\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"article\");\n    i0.ɵɵelement(7, \"app-display-inbound-levels\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"article\");\n    i0.ɵɵelement(9, \"app-display-inbound-agents\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"article\");\n    i0.ɵɵelement(11, \"app-display-inbound-breaks\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rows);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"rows\", ctx_r0.rows)(\"userSelection\", ctx_r0.userSelection);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"rows\", ctx_r0.rows)(\"userSelection\", ctx_r0.userSelection);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"rows\", ctx_r0.rows);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"rows\", ctx_r0.rows);\n} }\nvar DisplayInboundListComponent = /** @class */ (function () {\n    // Init\n    function DisplayInboundListComponent(displayInboundIndicatorsService, alertService, envService, modalService, userSelectionService) {\n        this.displayInboundIndicatorsService = displayInboundIndicatorsService;\n        this.alertService = alertService;\n        this.envService = envService;\n        this.modalService = modalService;\n        this.userSelectionService = userSelectionService;\n        // Subscription\n        this.subscription = new Subscription();\n        // Icon\n        this.faIdBadge = faIdBadge;\n        this.faClock = faClock;\n        // Component variables\n        this.alertMessage = new AlertModel();\n        // Show variables\n        this.show_columns = false; // shows or hides a colum\n        this.show = false; // shows or hides the table\n        this.selected = [];\n        this.historic = false;\n        // Graph variables\n        this.graph = false;\n        this.show_graph_or_table_button = false;\n        this.env = envService;\n        this.model = new DisplayInboundModel();\n        this.currentDate = moment(new Date()).format(\"YYYY-MM-DD\");\n        this.rows = new DisplayInboundResponseModel();\n        this.rows_original = new DisplayInboundResponseModel();\n        this.userSelection = new UserSelectionModel(\"userSelection\");\n        this.selectorVisibleFields = new UserSelectionModel(\"visible\");\n        this.selectorVisibleFields.assignation = false;\n        this.selectorVisibleFields.auxiliar = false;\n    }\n    // Start\n    DisplayInboundListComponent.prototype.ngOnInit = function () {\n        this.getReportList();\n        this.filterFieldList = this.model.fieldList();\n        this.numberOfRowsInTable = { id: 10, value: 10 };\n        this.exportName = \"reporte-conexión\";\n        this.initialSelectedFilterField = {\n            field_name: \"start_date\",\n            name: \"fecha_inicio\",\n            text: \"Fecha desde\"\n        };\n        this.onRepeat();\n    };\n    DisplayInboundListComponent.prototype.ngOnDestroy = function () {\n        this.subscription.unsubscribe();\n        // this.timerComponent.unsubscribe();\n        // this.timerClock.unsubscribe();\n    };\n    DisplayInboundListComponent.prototype.onRepeat = function () {\n        var _this = this;\n        if (true) {\n            this.timerComponent = timer(1000, 5000);\n            this.timerClock = timer(1000, 1000);\n            this.getReportList();\n            this.subscription.add(this.timerComponent.subscribe(function () {\n                if (objectDateToTextDate(_this.userSelection.start_date) ===\n                    _this.currentDate) {\n                    _this.getReportList();\n                }\n                else {\n                }\n            }));\n            this.timerClock.subscribe(function () {\n                _this.timerConnected = _this.timerConnected + 1;\n            });\n        }\n        else {\n            this.subscription.unsubscribe();\n            // this.timerComponent.unsubscribe();\n            // this.timerClock.unsubscribe();\n        }\n    };\n    DisplayInboundListComponent.prototype.setHeaderInfo = function (userSelection) {\n        userSelection.title = \"Display de llamadas entrantes\";\n        userSelection.options = \"-\";\n        userSelection.legend = \"-\";\n        userSelection.current_date = moment().format('YYYY-MM-DD');\n        return userSelection;\n    };\n    // Get records from backend\n    DisplayInboundListComponent.prototype.getReportList = function () {\n        var _this = this;\n        var userSelectionTemp = new UserSelectionModel(\"userSelection\");\n        this.userSelection = this.setHeaderInfo(userSelectionTemp);\n        this.displayInboundIndicatorsService\n            .getReportList(this.userSelection)\n            .subscribe(function (res) {\n            _this.timerConnected = 0;\n            if (res) {\n                _this.rows = res;\n                _this.userSelection = res.userSelection;\n            }\n            else {\n                console.error(\"Error\", res);\n            }\n            _this.alertMessage = new AlertModel();\n        }, function (error) {\n            console.error(\"Error\", error);\n            _this.show = false;\n            _this.alertService.error(error.status);\n            _this.alertMessage.alertTitle = \"Error del servidor\";\n            _this.alertMessage.alertText = error.statusText;\n            _this.alertMessage.alertShow = true;\n            _this.alertMessage.alertClass =\n                \"alert alert-danger alert-dismissible fade show\";\n        });\n    };\n    // Get records from backend\n    DisplayInboundListComponent.prototype.getDisplayShow = function (userSelection) {\n        var _this = this;\n        if (userSelection) {\n            this.displayInboundIndicatorsService\n                .getDisplayShow(userSelection)\n                .subscribe(function (res) {\n                if (res) {\n                    var temp = res[0].pro_show_display_selection;\n                    var temp2 = JSON.parse(temp);\n                    return temp2;\n                }\n                else {\n                    return _this.userSelection;\n                }\n                _this.alertMessage = new AlertModel();\n            }, function (error) {\n                console.error(\"Error\", error);\n                _this.show = false;\n                _this.alertService.error(error.status);\n                _this.alertMessage.alertTitle = \"Error del servidor\";\n                _this.alertMessage.alertText = error.statusText;\n                _this.alertMessage.alertShow = true;\n                _this.alertMessage.alertClass =\n                    \"alert alert-danger alert-dismissible fade show\";\n            });\n        }\n    };\n    // Show modal detail window\n    DisplayInboundListComponent.prototype.openDetailModal = function (content, selected) {\n        this.activeModal = this.modalService.open(content, {\n            windowClass: \"my-class\",\n            keyboard: false\n        });\n    };\n    // Show or hide graph or table buttons\n    DisplayInboundListComponent.prototype.onShowHideGraphButtons = function () {\n        this.graph = !this.graph;\n        this.show_graph_or_table_button = !this.show_graph_or_table_button;\n    };\n    // Data table activate\n    DisplayInboundListComponent.prototype.onActivate = function (event) {\n        this.row_selection = event.row;\n        if (event.type === \"dblclick\") {\n        }\n    };\n    // Datatable select\n    DisplayInboundListComponent.prototype.onSelect = function (event) {\n        this.selected = event.selected;\n    };\n    // Update on return of selector in header\n    DisplayInboundListComponent.prototype.onReturnHeaderResult = function (event) {\n        this.userSelection = new UserSelectionModel(\"userSelection\");\n        this.getReportList();\n        this.show_graph_or_table_button = false;\n        this.childGraph ? this.childGraph.generateGraph(\"header\", this.rows) : \"\";\n    };\n    // Activated by button\n    DisplayInboundListComponent.prototype.onRecalculate = function (event) {\n        this.userSelection = new UserSelectionModel(\"userSelection\");\n        this.getReportList();\n        this.show_graph_or_table_button = false;\n        console.error(\"this.rows\", this.rows);\n        this.childGraph ? this.childGraph.generateGraph(\"button\", this.rows) : \"\";\n    };\n    // Response report finder to display number of rows in table\n    DisplayInboundListComponent.prototype.onReturnNumberOfRowsInTable = function (event) {\n        console.error(\"event\", event);\n        this.numberOfRowsInTable = event;\n    };\n    // Response report finder\n    DisplayInboundListComponent.prototype.onReturnRowsForTable = function (event) {\n        this.rows = event;\n    };\n    // Helper function to expose detail fields from a row\n    DisplayInboundListComponent.prototype.onObjectToArray = function (data) {\n        var obj = data[0];\n        var output;\n        if (obj !== undefined) {\n            output = Object.entries(obj).map(function (_a) {\n                var key = _a[0], value = _a[1];\n                return ({\n                    key: key,\n                    value: value\n                });\n            });\n        }\n        return output;\n    };\n    // temporary method to generate excel map for exporting model\n    DisplayInboundListComponent.prototype.onCreateModel = function (model) {\n        model = new DisplayInboundModel().fieldList();\n        console.error(\"model\", model);\n        var obj = {};\n        model.map(function (x) {\n            obj[\"\" + x.name] = \"x.\" + x.field_name;\n        });\n        var newModel = JSON.stringify(obj);\n        var newModel2 = JSON.stringify(newModel\n            .replace(/\\\"/g, \"\")\n            .replace(/:/g, \": \")\n            .replace(/,/g, \",\\n \"));\n        var model3 = eval(newModel2);\n        console.error(\"model\", model3);\n    };\n    //Test function for modal\n    DisplayInboundListComponent.prototype.openModal = function (content) {\n        // this.rows_detail = this.rows_detail_original.filter(x => {\n        //   return x.agent_id === this.row_selection.agent_id;\n        // });\n        // this.rows_detail_total = this.rows_original.filter(x => {\n        //   return x.agent_id === this.row_selection.agent_id;\n        // });\n        // this.activeModal = this.modalService.open(content, {\n        //   windowClass: \"my-class\",\n        //   keyboard: false\n        // });\n    };\n    DisplayInboundListComponent.ɵfac = function DisplayInboundListComponent_Factory(t) { return new (t || DisplayInboundListComponent)(i0.ɵɵdirectiveInject(i1.DisplayInboundIndicatorsService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i2.EnvService), i0.ɵɵdirectiveInject(i3.NgbModal), i0.ɵɵdirectiveInject(i4.UserSelectionService)); };\n    DisplayInboundListComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundListComponent, selectors: [[\"app-display-display-inbound-list\"]], viewQuery: function DisplayInboundListComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(DisplayInboundGraphComponent, true);\n            i0.ɵɵviewQuery(DisplayInboundHighlightsComponent, true);\n        } if (rf & 2) {\n            var _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childGraph = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.highligthts = _t.first);\n        } }, decls: 16, vars: 13, consts: [[3, \"alertMessage\"], [3, \"userSelection\", \"selectorVisibleFields\", \"timerConnected\", \"returnResult\"], [1, \"main-button\"], [1, \"clock\", \"ml-auto\"], [3, \"icon\"], [\"class\", \"main\", 4, \"ngIf\"], [1, \"info\"], [1, \"very-small\"], [1, \"main\"], [\"class\", \"highlights\", 4, \"ngIf\"], [1, \"board\"], [1, \"pane\"], [3, \"rows\", \"userSelection\"], [3, \"rows\"], [1, \"highlights\"]], template: function DisplayInboundListComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\");\n            i0.ɵɵelement(1, \"app-alert\", 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"app-display-display-header\", 1);\n            i0.ɵɵlistener(\"returnResult\", function DisplayInboundListComponent_Template_app_display_display_header_returnResult_2_listener($event) { return ctx.onReturnHeaderResult($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"section\", 2);\n            i0.ɵɵelement(4, \"div\");\n            i0.ɵɵelementStart(5, \"div\", 3);\n            i0.ɵɵelementStart(6, \"a\");\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"a\");\n            i0.ɵɵelement(9, \"fa-icon\", 4);\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(11, DisplayInboundListComponent_main_11_Template, 12, 7, \"main\", 5);\n            i0.ɵɵelementStart(12, \"section\", 6);\n            i0.ɵɵelementStart(13, \"p\", 7);\n            i0.ɵɵtext(14);\n            i0.ɵɵpipe(15, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"alertMessage\", ctx.alertMessage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"userSelection\", ctx.userSelection)(\"selectorVisibleFields\", ctx.selectorVisibleFields)(\"timerConnected\", ctx.timerConnected);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate2(\"\", ctx.userSelection.creation_date, \" - \", ctx.userSelection.creation_time, \" - \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"icon\", ctx.faClock);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \\u00A0 \", ctx.timerConnected, \" \");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.historic);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \\u00DAltima actualizaci\\u00F3n: \", i0.ɵɵpipeBind2(15, 10, ctx.rows.displayInboundCallsIndicators[0].now, \"medium\"), \" \");\n        } }, directives: [i5.AlertComponent, i6.DisplayHeaderComponent, i7.FaIconComponent, i8.NgIf, i9.DisplayInboundCallsComponent, i10.DisplayInboundLevelsComponent, i11.DisplayInboundAgentsComponent, i12.DisplayInboundBreaksComponent, i13.DisplayInboundHighlightsComponent], pipes: [i8.DatePipe], styles: [\".frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;min-height:50vh;border-radius:5px;page-break-after:3px}.inner[_ngcontent-%COMP%]{padding:3px}.subtitles[_ngcontent-%COMP%]{padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(6,1fr);margin:20px;min-height:20vh}.pie[_ngcontent-%COMP%]{grid-column-start:1;z-index:2}.legend[_ngcontent-%COMP%]{grid-column-start:2;z-index:1}.item-one[_ngcontent-%COMP%]{grid-row-start:1;grid-row-end:2;grid-column-start:1;grid-column-end:4}.item-two[_ngcontent-%COMP%]{grid-area:1/1/4/2}@media screen and (max-width:1200px){.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;margin:20px;min-height:3vh;max-height:200px}.dashboard-card[_ngcontent-%COMP%]{flex:1}}@media screen and (max-width:992px){.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 2fr;margin:20px;min-height:3vh;max-height:200px}.dashboard-card[_ngcontent-%COMP%]{flex:1;min-width:25%;min-height:100%;margin-left:5px}}@media screen and (max-width:768px){.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 3fr;margin:20px;min-height:3vh;max-height:200px}.dashboard-card[_ngcontent-%COMP%]{flex:1;min-width:25%;min-height:100%;margin-left:5px}}.main[_ngcontent-%COMP%]{margin:20px;padding:0;background:#fff}.main-button[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;margin-left:20px;margin-top:5px;padding:0}.clock[_ngcontent-%COMP%]{margin-right:20px}.info[_ngcontent-%COMP%]{margin:20px;padding:0}.very-small[_ngcontent-%COMP%]{font-size:.8rem}.highlights[_ngcontent-%COMP%]{border-bottom:5px}.board[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 2fr 4fr 2fr;padding:0;grid-gap:.5rem}.card[_ngcontent-%COMP%]{border:1px #000}@media screen and (max-width:1200px){.board[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;padding:0;grid-gap:.5rem}}@media screen and (max-width:992px){.board[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;padding:0;grid-gap:.5rem}}@media screen and (max-width:768px){.board[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;padding:0;grid-gap:.5rem}}@media screen and (max-width:576px){.board[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;margin:5px;padding:0;grid-gap:.5rem}}\"] });\n    return DisplayInboundListComponent;\n}());\nexport { DisplayInboundListComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundListComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-display-inbound-list\",\n                templateUrl: \"./display-inbound-list.component.html\",\n                styleUrls: [\"./display-inbound-list.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.DisplayInboundIndicatorsService }, { type: i2.AlertService }, { type: i2.EnvService }, { type: i3.NgbModal }, { type: i4.UserSelectionService }]; }, { childGraph: [{\n            type: ViewChild,\n            args: [DisplayInboundGraphComponent]\n        }], highligthts: [{\n            type: ViewChild,\n            args: [DisplayInboundHighlightsComponent]\n        }] }); })();\n","<!----------ALERT MESSAGE------------------------- -->\n<div>\n  <app-alert [alertMessage]=\"alertMessage\"></app-alert>\n</div>\n\n<!----------REPORT HEADER------------------------- -->\n<app-display-display-header [userSelection]=\"userSelection\"\n                            [selectorVisibleFields]=\"selectorVisibleFields\"\n                            [timerConnected]=\"timerConnected\"\n                            (returnResult)=\"onReturnHeaderResult($event)\">\n</app-display-display-header>\n\n\n\n<section class=\"main-button\">\n  <div>\n\n  </div>\n  <div class=\"clock ml-auto\">\n    <a>{{userSelection.creation_date}} -\n      {{userSelection.creation_time}} - </a>\n    <a>\n      <fa-icon [icon]=\"faClock\"></fa-icon> &nbsp; {{timerConnected}}\n    </a>\n  </div>\n</section>\n\n\n\n<!-- TODAY -->\n<main class=\"main\" *ngIf=\"!historic\">\n  <!-- HIGHLIGHTS -->\n  <section class=\"highlights\" *ngIf=\"rows\">\n    <article>\n      <!-- <p class=\"small\"> HIGHLIGHTS </p> -->\n      <app-display-inbound-highlights [rows]=\"rows\">\n      </app-display-inbound-highlights>\n    </article>\n  </section>\n\n\n  <section>\n    <div class=\"board\">\n      <article class=\"pane\">\n        <app-display-inbound-calls [rows]=\"rows\"\n                                   [userSelection]=\"userSelection\">\n        </app-display-inbound-calls>\n      </article>\n\n      <article>\n        <app-display-inbound-levels [rows]=\"rows\"\n                                    [userSelection]=\"userSelection\">\n        </app-display-inbound-levels>\n      </article>\n\n      <article>\n        <app-display-inbound-agents [rows]=\"rows\"></app-display-inbound-agents>\n      </article>\n\n      <article>\n        <app-display-inbound-breaks [rows]=\"rows\">\n        </app-display-inbound-breaks>\n      </article>\n    </div>\n  </section>\n</main>\n\n<section class=\"info\">\n  <p class=\"very-small\">\n    Última actualización:\n    {{rows.displayInboundCallsIndicators[0].now | date: 'medium'}}\n  </p>\n</section>","import { Component, OnInit, Input } from \"@angular/core\";\nimport { ChartType, ChartOptions } from \"chart.js\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Label } from \"ng2-charts\";\nimport * as pluginDataLabels from \"chartjs-plugin-datalabels\";\n\n@Component({\n  selector: \"app-display-inbound-agents-pie\",\n  templateUrl: \"./display-inbound-agents-pie.component.html\",\n  styleUrls: [\"./display-inbound-agents-pie.component.scss\"]\n})\nexport class DisplayInboundAgentsPieComponent implements OnInit {\n  @Input() userSelection;\n  @Input() rows;\n  // Pie\n  public pieChartOptions: ChartOptions = {\n    responsive: false,\n    legend: {\n      position: \"top\"\n    },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = ctx.chart.data.labels[ctx.dataIndex];\n          return label;\n        }\n      }\n    }\n  };\n  public pieChartLabels: Label[] = [\n    \"Disponible\",\n    \"Ocupado\",\n    \"Auxiliar\",\n    \"Asignado\"\n  ];\n  public pieChartData: number[] = [300, 500, 100, 200];\n  public pieChartType: ChartType = \"doughnut\";\n  public pieChartLegend = false;\n  // public pieChartPlugins = [pluginDataLabels];\n  public pieChartColors = [\n    {\n      backgroundColor: [\"#dc3545\", \"#28a745\", \"#6f42c1\", \"#ffc107\"]\n    }\n  ];\n\n  data = [\n    { name: \"Ocupado\", value: 0, color: \"#dc3545\" },\n    { name: \"Disponible\", value: 0, color: \"#28a745\" },\n    { name: \"Asignado\", value: 0, color: \"#6f42c1\" },\n    { name: \"Auxiliar\", value: 0, color: \"#ffc107\" }\n  ];\n\n  pieChartPlugins;\n\n  constructor(private modalService: NgbModal) {}\n\n  ngOnInit() {}\n\n  // events\n  public chartClicked({\n    event,\n    active\n  }: {\n    event: MouseEvent;\n    active: {}[];\n  }): void {\n    console.error(event, active);\n  }\n\n  public chartHovered({\n    event,\n    active\n  }: {\n    event: MouseEvent;\n    active: {}[];\n  }): void {\n    console.error(event, active);\n  }\n\n  getColor(data) {\n    let temp = data.map(x => {\n      return x.color;\n    });\n\n    let pieChartColors = [\n      {\n        backgroundColor: temp\n      }\n    ];\n\n    return pieChartColors;\n  }\n\n  getValues(data) {\n    return data.map(x => {\n      return x.value;\n    });\n  }\n\n  getLabels(data) {\n    return data.map(x => {\n      return x.name;\n    });\n  }\n\n  openModal(content) {\n    this.modalService.open(content, {\n      size: \"lg\",\n      ariaLabelledBy: \"modal-basic-title\"\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng2-charts\";\nfunction DisplayInboundAgentsPieComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"canvas\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r0.getValues(ctx_r0.rows.agentsConnectedByGroup))(\"labels\", ctx_r0.getLabels(ctx_r0.rows.agentsConnectedByGroup))(\"chartType\", ctx_r0.pieChartType)(\"options\", ctx_r0.pieChartOptions)(\"plugins\", ctx_r0.pieChartPlugins)(\"colors\", ctx_r0.getColor(ctx_r0.rows.agentsConnectedByGroup))(\"legend\", ctx_r0.pieChartLegend);\n} }\nvar DisplayInboundAgentsPieComponent = /** @class */ (function () {\n    function DisplayInboundAgentsPieComponent(modalService) {\n        this.modalService = modalService;\n        // Pie\n        this.pieChartOptions = {\n            responsive: false,\n            legend: {\n                position: \"top\"\n            },\n            plugins: {\n                datalabels: {\n                    formatter: function (value, ctx) {\n                        var label = ctx.chart.data.labels[ctx.dataIndex];\n                        return label;\n                    }\n                }\n            }\n        };\n        this.pieChartLabels = [\n            \"Disponible\",\n            \"Ocupado\",\n            \"Auxiliar\",\n            \"Asignado\"\n        ];\n        this.pieChartData = [300, 500, 100, 200];\n        this.pieChartType = \"doughnut\";\n        this.pieChartLegend = false;\n        // public pieChartPlugins = [pluginDataLabels];\n        this.pieChartColors = [\n            {\n                backgroundColor: [\"#dc3545\", \"#28a745\", \"#6f42c1\", \"#ffc107\"]\n            }\n        ];\n        this.data = [\n            { name: \"Ocupado\", value: 0, color: \"#dc3545\" },\n            { name: \"Disponible\", value: 0, color: \"#28a745\" },\n            { name: \"Asignado\", value: 0, color: \"#6f42c1\" },\n            { name: \"Auxiliar\", value: 0, color: \"#ffc107\" }\n        ];\n    }\n    DisplayInboundAgentsPieComponent.prototype.ngOnInit = function () { };\n    // events\n    DisplayInboundAgentsPieComponent.prototype.chartClicked = function (_a) {\n        var event = _a.event, active = _a.active;\n        console.error(event, active);\n    };\n    DisplayInboundAgentsPieComponent.prototype.chartHovered = function (_a) {\n        var event = _a.event, active = _a.active;\n        console.error(event, active);\n    };\n    DisplayInboundAgentsPieComponent.prototype.getColor = function (data) {\n        var temp = data.map(function (x) {\n            return x.color;\n        });\n        var pieChartColors = [\n            {\n                backgroundColor: temp\n            }\n        ];\n        return pieChartColors;\n    };\n    DisplayInboundAgentsPieComponent.prototype.getValues = function (data) {\n        return data.map(function (x) {\n            return x.value;\n        });\n    };\n    DisplayInboundAgentsPieComponent.prototype.getLabels = function (data) {\n        return data.map(function (x) {\n            return x.name;\n        });\n    };\n    DisplayInboundAgentsPieComponent.prototype.openModal = function (content) {\n        this.modalService.open(content, {\n            size: \"lg\",\n            ariaLabelledBy: \"modal-basic-title\"\n        });\n    };\n    DisplayInboundAgentsPieComponent.ɵfac = function DisplayInboundAgentsPieComponent_Factory(t) { return new (t || DisplayInboundAgentsPieComponent)(i0.ɵɵdirectiveInject(i1.NgbModal)); };\n    DisplayInboundAgentsPieComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundAgentsPieComponent, selectors: [[\"app-display-inbound-agents-pie\"]], inputs: { userSelection: \"userSelection\", rows: \"rows\" }, decls: 1, vars: 1, consts: [[\"class\", \"chart-wrapper\", 4, \"ngIf\"], [1, \"chart-wrapper\"], [\"baseChart\", \"\", 3, \"data\", \"labels\", \"chartType\", \"options\", \"plugins\", \"colors\", \"legend\"]], template: function DisplayInboundAgentsPieComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, DisplayInboundAgentsPieComponent_div_0_Template, 2, 7, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.agentsConnectedByGroup);\n        } }, directives: [i2.NgIf, i3.BaseChartDirective], styles: [\".chart-wrapper[_ngcontent-%COMP%]{position:relative;height:40vh;max-width:100%}\"] });\n    return DisplayInboundAgentsPieComponent;\n}());\nexport { DisplayInboundAgentsPieComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundAgentsPieComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-agents-pie\",\n                templateUrl: \"./display-inbound-agents-pie.component.html\",\n                styleUrls: [\"./display-inbound-agents-pie.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.NgbModal }]; }, { userSelection: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }] }); })();\n","<div  class=\"chart-wrapper\" *ngIf=\"rows.agentsConnectedByGroup\">\n  <canvas baseChart [data]=\"getValues(rows.agentsConnectedByGroup)\"\n          [labels]=\"getLabels(rows.agentsConnectedByGroup)\"\n          [chartType]=\"pieChartType\" [options]=\"pieChartOptions\"\n          [plugins]=\"pieChartPlugins\"\n          [colors]=\"getColor(rows.agentsConnectedByGroup)\"\n          [legend]=\"pieChartLegend\">\n  </canvas>\n</div>","import { Component, OnInit, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-display-inbound-agents\",\n  templateUrl: \"./display-inbound-agents.component.html\",\n  styleUrls: [\"./display-inbound-agents.component.scss\"]\n})\nexport class DisplayInboundAgentsComponent implements OnInit {\n  @Input() userSelection;\n  @Input() rows;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, Input } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./display-inbound-agents-pie/display-inbound-agents-pie.component\";\nimport * as i2 from \"./display-inbound-agents-distribution/display-inbound-agents-distribution.component\";\nvar DisplayInboundAgentsComponent = /** @class */ (function () {\n    function DisplayInboundAgentsComponent() {\n    }\n    DisplayInboundAgentsComponent.prototype.ngOnInit = function () { };\n    DisplayInboundAgentsComponent.ɵfac = function DisplayInboundAgentsComponent_Factory(t) { return new (t || DisplayInboundAgentsComponent)(); };\n    DisplayInboundAgentsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundAgentsComponent, selectors: [[\"app-display-inbound-agents\"]], inputs: { userSelection: \"userSelection\", rows: \"rows\" }, decls: 11, vars: 2, consts: [[1, \"frame\"], [1, \"inner\"], [1, \"subtitles\", \"text-center\"], [1, \"dashboard\"], [\"id\", \"parent\", 1, \"pie\"], [\"id\", \"child\"], [3, \"rows\"], [1, \"legend\"]], template: function DisplayInboundAgentsComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"main\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵelementStart(2, \"p\", 2);\n            i0.ɵɵtext(3, \"Agentes conectados\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"section\", 3);\n            i0.ɵɵelementStart(5, \"article\", 4);\n            i0.ɵɵelementStart(6, \"div\", 5);\n            i0.ɵɵelement(7, \"app-display-inbound-agents-pie\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"article\", 7);\n            i0.ɵɵelementStart(9, \"div\");\n            i0.ɵɵelement(10, \"app-display-inbound-agents-distribution\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"rows\", ctx.rows);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"rows\", ctx.rows);\n        } }, directives: [i1.DisplayInboundAgentsPieComponent, i2.DisplayInboundAgentsDistributionComponent], styles: [\".frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;min-height:50vh;border-radius:5px;page-break-after:3px}.inner[_ngcontent-%COMP%]{padding:3px}.subtitles[_ngcontent-%COMP%]{padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr}.pie[_ngcontent-%COMP%]{display:inline}#parent[_ngcontent-%COMP%]{position:relative}#child[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;height:30%;width:50%;margin:-10% 0 0 -40%}@media screen and (max-width:1200px){.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr}#child[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;height:30%;width:50%;margin:-15% 0 0 -40%}}@media screen and (max-width:992px){.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr}}@media screen and (max-width:768px){.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr}.pie[_ngcontent-%COMP%]{display:none}}@media screen and (max-width:576px){.dashboard[_ngcontent-%COMP%]{display:grid;grid-template-rows:1fr}.pie[_ngcontent-%COMP%]{display:none}}\"] });\n    return DisplayInboundAgentsComponent;\n}());\nexport { DisplayInboundAgentsComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundAgentsComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-agents\",\n                templateUrl: \"./display-inbound-agents.component.html\",\n                styleUrls: [\"./display-inbound-agents.component.scss\"]\n            }]\n    }], function () { return []; }, { userSelection: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }] }); })();\n","<main class=\"frame\">\n  <div class=\"inner\">\n    <p class=\"subtitles text-center\">Agentes conectados</p>\n\n    <section class=\"dashboard\">\n\n      <!-- -----PIE -->\n      <article id=\"parent\" class=\"pie\">\n        <div id=\"child\">\n          <app-display-inbound-agents-pie [rows]=\"rows\">\n          </app-display-inbound-agents-pie>\n        </div>\n      </article>\n\n      <!-- LEGEND -->\n      <article class=\"legend\">\n        <div>\n          <app-display-inbound-agents-distribution [rows]=\"rows\">\n          </app-display-inbound-agents-distribution>\n        </div>\n      </article>\n    </section>\n  </div>\n</main>","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-display-inbound-breaks-auxiliar\",\n  templateUrl: \"./display-inbound-breaks-auxiliar.component.html\",\n  styleUrls: [\"./display-inbound-breaks-auxiliar.component.scss\"]\n})\nexport class DisplayInboundBreaksAuxiliarComponent implements OnInit {\n  @Input() rows;\n  @Input() userSelection;\n\n  constructor(private modalService: NgbModal) {}\n\n  ngOnInit() {}\n\n  openModal(content) {\n    this.modalService.open(content, {\n      size: \"lg\",\n      ariaLabelledBy: \"modal-basic-title\"\n    });\n  }\n\n  selectLine(content, id) {\n    this.userSelection.selected_break = id;\n    this.modalService.open(content, {\n      size: \"lg\",\n      ariaLabelledBy: \"modal-basic-title\"\n    });\n\n    // console.error('name',id, this.userSelection);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../../../../../../shared/pipes/shortNames.pipe\";\nfunction DisplayInboundBreaksAuxiliarComponent_p_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" Agentes en auxiliar \");\n    i0.ɵɵelementEnd();\n} }\nfunction DisplayInboundBreaksAuxiliarComponent_article_3_ul_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 6);\n    i0.ɵɵelementStart(1, \"li\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"li\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"shortNames\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"li\", 9);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 3, item_r3.name), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.duration, \" \");\n} }\nfunction DisplayInboundBreaksAuxiliarComponent_article_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"article\");\n    i0.ɵɵtemplate(1, DisplayInboundBreaksAuxiliarComponent_article_3_ul_1_Template, 8, 5, \"ul\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows.agentsAuxiliarResume);\n} }\nvar DisplayInboundBreaksAuxiliarComponent = /** @class */ (function () {\n    function DisplayInboundBreaksAuxiliarComponent(modalService) {\n        this.modalService = modalService;\n    }\n    DisplayInboundBreaksAuxiliarComponent.prototype.ngOnInit = function () { };\n    DisplayInboundBreaksAuxiliarComponent.prototype.openModal = function (content) {\n        this.modalService.open(content, {\n            size: \"lg\",\n            ariaLabelledBy: \"modal-basic-title\"\n        });\n    };\n    DisplayInboundBreaksAuxiliarComponent.prototype.selectLine = function (content, id) {\n        this.userSelection.selected_break = id;\n        this.modalService.open(content, {\n            size: \"lg\",\n            ariaLabelledBy: \"modal-basic-title\"\n        });\n        // console.error('name',id, this.userSelection);\n    };\n    DisplayInboundBreaksAuxiliarComponent.ɵfac = function DisplayInboundBreaksAuxiliarComponent_Factory(t) { return new (t || DisplayInboundBreaksAuxiliarComponent)(i0.ɵɵdirectiveInject(i1.NgbModal)); };\n    DisplayInboundBreaksAuxiliarComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundBreaksAuxiliarComponent, selectors: [[\"app-display-inbound-breaks-auxiliar\"]], inputs: { rows: \"rows\", userSelection: \"userSelection\" }, decls: 4, vars: 2, consts: [[1, \"main\"], [\"class\", \"subtitles\", 4, \"ngIf\"], [1, \"indicadores\"], [4, \"ngIf\"], [1, \"subtitles\"], [\"class\", \"inidcadores-items\", 4, \"ngFor\", \"ngForOf\"], [1, \"inidcadores-items\"], [1, \"indicadores-cantidad\"], [1, \"indicadores-descripcion\"], [1, \"indicadores-porcentaje\"]], template: function DisplayInboundBreaksAuxiliarComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"section\", 0);\n            i0.ɵɵtemplate(1, DisplayInboundBreaksAuxiliarComponent_p_1_Template, 2, 0, \"p\", 1);\n            i0.ɵɵelementStart(2, \"section\", 2);\n            i0.ɵɵtemplate(3, DisplayInboundBreaksAuxiliarComponent_article_3_Template, 2, 1, \"article\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.agentsAuxiliarResume[0] !== undefined);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.agentsAuxiliarResume);\n        } }, directives: [i2.NgIf, i2.NgForOf], pipes: [i3.ShortNamesPipe], styles: [\"main[_ngcontent-%COMP%]{padding:3px}.frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;min-height:50vh;border-radius:5px;page-break-after:3px}.subtitles[_ngcontent-%COMP%]{padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.indicadores[_ngcontent-%COMP%]{margin:10px 10px 3px;font-size:1rem;color:gray}.indicadores[_ngcontent-%COMP%]   .inidcadores-items[_ngcontent-%COMP%]{display:grid;grid-template-columns:1.5fr 5fr 2fr}.indicadores[_ngcontent-%COMP%]   .indicadores-cantidad[_ngcontent-%COMP%], .indicadores[_ngcontent-%COMP%]   .indicadores-descripcion[_ngcontent-%COMP%]{color:gray}.indicadores[_ngcontent-%COMP%]   .indicadores-porcentaje[_ngcontent-%COMP%]{color:#000}.pointer[_ngcontent-%COMP%]{cursor:pointer}li[_ngcontent-%COMP%], ul[_ngcontent-%COMP%]{padding:0;margin:0}\"] });\n    return DisplayInboundBreaksAuxiliarComponent;\n}());\nexport { DisplayInboundBreaksAuxiliarComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundBreaksAuxiliarComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-breaks-auxiliar\",\n                templateUrl: \"./display-inbound-breaks-auxiliar.component.html\",\n                styleUrls: [\"./display-inbound-breaks-auxiliar.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.NgbModal }]; }, { rows: [{\n            type: Input\n        }], userSelection: [{\n            type: Input\n        }] }); })();\n","<section class=\"main\">\n  <p class=\"subtitles\" *ngIf=\"rows.agentsAuxiliarResume[0] !== undefined\">\n    Agentes en auxiliar </p>\n\n  <section class=\"indicadores\">\n    <article *ngIf=\"rows.agentsAuxiliarResume\">\n      <ul class=\"inidcadores-items\"\n          *ngFor=\"let item of rows.agentsAuxiliarResume\">\n        <li class=\"indicadores-cantidad\">\n          {{ item.value }}\n        </li>\n        <li class=\"indicadores-descripcion\">\n          {{ item.name | shortNames}}\n        </li>\n        <li class=\"indicadores-porcentaje\">\n          {{ item.duration }}\n        </li>\n      </ul>\n    </article>\n  </section>\n</section>","export class DisplayInboundModel {\n  displayInboundCallsIndicators;\n  displayInboundCurrentCallsIndicators;\n  agentsPlannedTotal;\n  agentsConnectedTotal;\n  agentsConnectedByGroup;\n  agentsAuxiliarResume;\n  agentsAssignationResume;\n\n  constructor() {\n    this.displayInboundCallsIndicators = '';\n    this.displayInboundCurrentCallsIndicators = '';\n    this.agentsPlannedTotal = '';\n    this.agentsConnectedTotal = '';\n    this.agentsConnectedByGroup = '';\n    this.agentsAuxiliarResume = '';\n    this.agentsAssignationResume = '';\n  }\n\n  public fieldList() {\n    return [\n      { field_name: \"displayInboundCallsIndicators\", name: \"indicadores_llamadas\", text: \"Indicadores\" },\n      { field_name: \"displayInboundCurrentCallsIndicators\", name: \"indicadores_llamadas_actuales\", text: \"Llamadas actuales\" },\n      { field_name: \"agentsPlannedTotal\", name: \"agentes_planeados\", text: \"Agentes planeados\" },\n      { field_name: \"agentsConnectedTotal\", name: \"agentes_conectados\", text: \"Agentes conectados\" },\n      { field_name: \"agentsConnectedByGroup\", name: \"agentes_conectados_por_grupo\", text: \"Agentes por grupo\" },\n      { field_name: \"agentsAuxiliarResume\", name: \"resumen_auxiliar\", text: \"Resumen de auxiliares\" },\n      { field_name: \"agentsAssignationResume\", name: \"resumen_asignacion\", text: \"Resumen de asignaciones\" },\n    ];\n  }\n\n  public fieldInfo(field_name) {\n    const register = this.fieldList();\n\n    return register.filter(x => {\n      return x.field_name === field_name;\n    })[0];\n  }\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-display-inbound-breaks\",\n  templateUrl: \"./display-inbound-breaks.component.html\",\n  styleUrls: [\"./display-inbound-breaks.component.scss\"]\n})\nexport class DisplayInboundBreaksComponent implements OnInit {\n  @Input() rows;\n  @Input() userSelection;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, Input } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./display-inbound-breaks-auxiliar/display-inbound-breaks-auxiliar.component\";\nimport * as i3 from \"./display-inbound-breaks-assignations/display-inbound-breaks-assignations.component\";\nfunction DisplayInboundBreaksComponent_p_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Auxiliares\");\n    i0.ɵɵelementEnd();\n} }\nvar DisplayInboundBreaksComponent = /** @class */ (function () {\n    function DisplayInboundBreaksComponent() {\n    }\n    DisplayInboundBreaksComponent.prototype.ngOnInit = function () { };\n    DisplayInboundBreaksComponent.ɵfac = function DisplayInboundBreaksComponent_Factory(t) { return new (t || DisplayInboundBreaksComponent)(); };\n    DisplayInboundBreaksComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundBreaksComponent, selectors: [[\"app-display-inbound-breaks\"]], inputs: { rows: \"rows\", userSelection: \"userSelection\" }, decls: 7, vars: 3, consts: [[1, \"frame\"], [\"class\", \"subtitles\", 4, \"ngIf\"], [3, \"rows\"], [1, \"subtitles\"]], template: function DisplayInboundBreaksComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"main\", 0);\n            i0.ɵɵelementStart(1, \"section\");\n            i0.ɵɵtemplate(2, DisplayInboundBreaksComponent_p_2_Template, 2, 0, \"p\", 1);\n            i0.ɵɵelementStart(3, \"article\");\n            i0.ɵɵelement(4, \"app-display-inbound-breaks-auxiliar\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"article\");\n            i0.ɵɵelement(6, \"app-display-inbound-breaks-assignations\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.agentsAssignationResume[0] === undefined && ctx.rows.agentsAuxiliarResume[0] === undefined);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"rows\", ctx.rows);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"rows\", ctx.rows);\n        } }, directives: [i1.NgIf, i2.DisplayInboundBreaksAuxiliarComponent, i3.DisplayInboundBreaksAssignationsComponent], styles: [\"main[_ngcontent-%COMP%]{padding:3px}.frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;min-height:50vh;border-radius:5px;page-break-after:3px}.subtitles[_ngcontent-%COMP%]{padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.indicadores[_ngcontent-%COMP%]{margin:10px 10px 3px;font-size:1rem;color:gray}.indicadores[_ngcontent-%COMP%]   .inidcadores-items[_ngcontent-%COMP%]{display:grid;grid-template-columns:1.5fr 5fr 2fr}.indicadores[_ngcontent-%COMP%]   .indicadores-cantidad[_ngcontent-%COMP%], .indicadores[_ngcontent-%COMP%]   .indicadores-descripcion[_ngcontent-%COMP%]{color:gray}.indicadores[_ngcontent-%COMP%]   .indicadores-porcentaje[_ngcontent-%COMP%]{color:#000}.pointer[_ngcontent-%COMP%]{cursor:pointer}li[_ngcontent-%COMP%], ul[_ngcontent-%COMP%]{padding:0;margin:0}\"] });\n    return DisplayInboundBreaksComponent;\n}());\nexport { DisplayInboundBreaksComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundBreaksComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-breaks\",\n                templateUrl: \"./display-inbound-breaks.component.html\",\n                styleUrls: [\"./display-inbound-breaks.component.scss\"]\n            }]\n    }], function () { return []; }, { rows: [{\n            type: Input\n        }], userSelection: [{\n            type: Input\n        }] }); })();\n","<main class=\"frame\">\n  <section>\n    <p class=\"subtitles\"\n       *ngIf=\"rows.agentsAssignationResume[0] === undefined && rows.agentsAuxiliarResume[0] === undefined\">\n      Auxiliares</p>\n    <!-- AUXILIAR -->\n    <article>\n      <app-display-inbound-breaks-auxiliar [rows]=\"rows\">\n      </app-display-inbound-breaks-auxiliar>\n    </article>\n\n    <!-- ASSIGNATION -->\n    <article>\n      <app-display-inbound-breaks-assignations [rows]=\"rows\">\n      </app-display-inbound-breaks-assignations>\n    </article>\n  </section>\n</main>\n\n\n<!-- *ngIf=\"!rows.agentsAuxiliarResume && !rows.agentsAssignationResume\" -->","import { Component, OnInit, Input } from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { UserSelectionModel } from \"shared/models\";\n\n@Component({\n  selector: \"app-display-inbound-levels\",\n  templateUrl: \"./display-inbound-levels.component.html\",\n  styleUrls: [\"./display-inbound-levels.component.scss\"]\n})\nexport class DisplayInboundLevelsComponent implements OnInit {\n  @Input() userSelection;\n  @Input() rows;\n\n  constructor(private modalService: NgbModal) {}\n\n  ngOnInit() {\n    // console.error(\"userSelection\", this.userSelection.mode.name);\n  }\n\n  openModal(content) {\n    this.modalService.open(content, {\n      size: \"lg\",\n      ariaLabelledBy: \"modal-basic-title\"\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nfunction DisplayInboundLevelsComponent_section_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 2);\n    i0.ɵɵelementStart(1, \"article\", 3);\n    i0.ɵɵelementStart(2, \"p\", 4);\n    i0.ɵɵtext(3, \"Niveles\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelementStart(5, \"p\", 6);\n    i0.ɵɵtext(6, \"Nivel de servicio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"percent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 5);\n    i0.ɵɵelementStart(11, \"p\", 6);\n    i0.ɵɵtext(12, \"Nivel de atenci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 7);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"percent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 5);\n    i0.ɵɵelementStart(17, \"p\", 6);\n    i0.ɵɵtext(18, \"Nivel de abandono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\", 7);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"percent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\");\n    i0.ɵɵelementStart(23, \"p\", 4);\n    i0.ɵɵtext(24, \"Tiempos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 5);\n    i0.ɵɵelementStart(26, \"p\", 6);\n    i0.ɵɵtext(27, \"TMO\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"p\", 7);\n    i0.ɵɵtext(29);\n    i0.ɵɵpipe(30, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 5);\n    i0.ɵɵelementStart(32, \"p\", 6);\n    i0.ɵɵtext(33, \"ASA\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"p\", 7);\n    i0.ɵɵtext(35);\n    i0.ɵɵpipe(36, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(9, 5, ctx_r0.rows.displayInboundCallsIndicators[0].inboundServiceLevel, \"1.2-2\"), \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(15, 8, ctx_r0.rows.displayInboundCallsIndicators[0].inboundAttentionLevel, \"1.2-2\"), \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(21, 11, ctx_r0.rows.displayInboundCallsIndicators[0].inboundAbandonLevel, \"1.2-2\"), \" \");\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(30, 14, ctx_r0.rows.displayInboundCallsIndicators[0].inboundTmo, \"1.0-2\"), \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(36, 17, ctx_r0.rows.displayInboundCallsIndicators[0].inboundAsa, \"1.0-2\"), \" \");\n} }\nvar DisplayInboundLevelsComponent = /** @class */ (function () {\n    function DisplayInboundLevelsComponent(modalService) {\n        this.modalService = modalService;\n    }\n    DisplayInboundLevelsComponent.prototype.ngOnInit = function () {\n        // console.error(\"userSelection\", this.userSelection.mode.name);\n    };\n    DisplayInboundLevelsComponent.prototype.openModal = function (content) {\n        this.modalService.open(content, {\n            size: \"lg\",\n            ariaLabelledBy: \"modal-basic-title\"\n        });\n    };\n    DisplayInboundLevelsComponent.ɵfac = function DisplayInboundLevelsComponent_Factory(t) { return new (t || DisplayInboundLevelsComponent)(i0.ɵɵdirectiveInject(i1.NgbModal)); };\n    DisplayInboundLevelsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundLevelsComponent, selectors: [[\"app-display-inbound-levels\"]], inputs: { userSelection: \"userSelection\", rows: \"rows\" }, decls: 2, vars: 1, consts: [[1, \"frame\"], [\"class\", \"tablegraph\", 4, \"ngIf\"], [1, \"tablegraph\"], [\"id\", \"Calls\", 1, \"tablegraph-card\"], [1, \"tablegraph-subtitles\"], [1, \"tablegraph-table\"], [1, \"tablegraph-text\"], [1, \"tablegraph-number\"]], template: function DisplayInboundLevelsComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"main\", 0);\n            i0.ɵɵtemplate(1, DisplayInboundLevelsComponent_section_1_Template, 37, 20, \"section\", 1);\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.displayInboundCallsIndicators[0]);\n        } }, directives: [i2.NgIf], pipes: [i2.PercentPipe, i2.DecimalPipe], styles: [\".frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;border-radius:5px;min-height:50vh}.tablegraph[_ngcontent-%COMP%]{margin:0;padding:3px}.tablegraph-subtitles[_ngcontent-%COMP%]{margin:200;padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr;margin:0;padding:5px 5px 0}.tablegraph-table[_ngcontent-%COMP%]:hover{color:#242488;border:1px solid #5e5b5b;border-radius:5px;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.tablegraph-table[_ngcontent-%COMP%]:nth-child(even){background:#f2f2f2}.tablegraph-table[_ngcontent-%COMP%]:nth-child(odd){background:#fff}.tablegraph-table[_ngcontent-%COMP%]:first-child{background:#f2f2f2;margin-top:10px}.tablegraph-table[_ngcontent-%COMP%]:last-child{background:#fff;margin-bottom:10px}.tablegraph-text[_ngcontent-%COMP%]{font-size:1rem;padding:5px 20px 0 0;color:#495057}.tablegraph-number[_ngcontent-%COMP%]{text-align:right;font-size:1.4rem;font-weight:400;padding-top:0}@media screen and (max-width:1200px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:992px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:3fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:768px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:576px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 1fr;margin:0;padding:5px 5px 0}}.dark-modal[_ngcontent-%COMP%]   .modal-content[_ngcontent-%COMP%]{background-color:#292b2c;color:#fff}.dark-modal[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{color:#fff}.light-blue-backdrop[_ngcontent-%COMP%]{background-color:#5cb3fd}.modal-header[_ngcontent-%COMP%]{background:#5cb3fd}.modal-lg[_ngcontent-%COMP%]{min-width:90%!important;max-width:95%!important}.modal-buton[_ngcontent-%COMP%]{font-size:1.2rem}.pointer[_ngcontent-%COMP%]{cursor:pointer}\"] });\n    return DisplayInboundLevelsComponent;\n}());\nexport { DisplayInboundLevelsComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundLevelsComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-levels\",\n                templateUrl: \"./display-inbound-levels.component.html\",\n                styleUrls: [\"./display-inbound-levels.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.NgbModal }]; }, { userSelection: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }] }); })();\n","<main class=\"frame\">\n  <section class=\"tablegraph\" *ngIf=\"rows.displayInboundCallsIndicators[0]\">\n    <article id=\"Calls\" class=\"tablegraph-card\">\n      <p class=\"tablegraph-subtitles\">Niveles</p>\n\n      <!-- Nivel de servicio -->\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Nivel de servicio</p>\n\n        <p class=\"tablegraph-number \">\n          {{\n          rows.displayInboundCallsIndicators[0]\n            .inboundServiceLevel | percent: \"1.2-2\"\n        }}\n        </p>\n      </div>\n\n      <!-- Nivel de atención -->\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Nivel de atención</p>\n        <p class=\"tablegraph-number \">\n          {{\n          rows.displayInboundCallsIndicators[0]\n            .inboundAttentionLevel | percent: \"1.2-2\"\n        }}\n        </p>\n      </div>\n\n      <!-- Nivel de abandono -->\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Nivel de abandono</p>\n        <p class=\"tablegraph-number \">\n          {{\n          rows.displayInboundCallsIndicators[0]\n            .inboundAbandonLevel | percent: \"1.2-2\"\n        }}\n        </p>\n      </div>\n\n      <div>\n        <p class=\"tablegraph-subtitles\">Tiempos</p>\n      </div>\n\n      <!-- TMO -->\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">TMO</p>\n        <p class=\"tablegraph-number \">\n          {{\n          rows.displayInboundCallsIndicators[0]\n            .inboundTmo | number: \"1.0-2\"\n        }}\n        </p>\n      </div>\n\n      <!-- ASA -->\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">ASA</p>\n        <p class=\"tablegraph-number \">\n          {{\n          rows.displayInboundCallsIndicators[0]\n            .inboundAsa | number: \"1.0-2\"\n        }}\n        </p>\n      </div>\n\n      <!-- Máx espera en cola -->\n      <!-- <div class=\"tablegraph-table \"\n           *ngIf=\"userSelection.mode.name === 'Actual'\">\n        <p class=\"tablegraph-text\">Máx espera en cola</p>\n        <p class=\"tablegraph-number \">\n          {{\n                rows.displayInboundCurrentCallsIndicators[0]\n                  .maxWaitTimeOnQue | number: \"1.0-2\"\n              }}\n        </p>\n      </div> -->\n\n\n      <!-- Max espera -->\n      <!-- <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Max espera</p>\n        <p class=\"tablegraph-number \">\n          {{\n          rows.displayInboundCallsIndicators[0]\n            .maxWaitTime | number: \"1.0-2\"\n        }}\n        </p>\n      </div> -->\n    </article>\n\n  </section>\n</main>","import { Component, OnInit, Input } from \"@angular/core\";\nimport { UserSelectionModel } from \"shared/models\";\n\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-display-inbound-calls\",\n  templateUrl: \"./display-inbound-calls.component.html\",\n  styleUrls: [\"./display-inbound-calls.component.scss\"]\n})\nexport class DisplayInboundCallsComponent implements OnInit {\n  @Input() rows;\n  @Input() userSelection;\n\n  constructor(private modalService: NgbModal) {}\n\n  ngOnInit() {\n    // console.error('displayInboundCallsIndicators', this.displayInboundCallsIndicators);\n  }\n\n  openModal(content) {\n    this.modalService.open(content, {\n      size: \"lg\",\n      ariaLabelledBy: \"modal-basic-title\"\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nfunction DisplayInboundCallsComponent_section_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 2);\n    i0.ɵɵelementStart(1, \"article\", 3);\n    i0.ɵɵelementStart(2, \"p\", 4);\n    i0.ɵɵtext(3, \"Llamadas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelementStart(5, \"p\", 6);\n    i0.ɵɵtext(6, \"Recibidas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 5);\n    i0.ɵɵelementStart(11, \"p\", 6);\n    i0.ɵɵtext(12, \"Atendidas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 7);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 5);\n    i0.ɵɵelementStart(17, \"p\", 6);\n    i0.ɵɵtext(18, \"Abandonadas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\", 7);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 5);\n    i0.ɵɵelementStart(23, \"p\", 6);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"p\", 7);\n    i0.ɵɵtext(26);\n    i0.ɵɵpipe(27, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 5);\n    i0.ɵɵelementStart(29, \"p\", 6);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"p\", 7);\n    i0.ɵɵtext(32);\n    i0.ɵɵpipe(33, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 5);\n    i0.ɵɵelementStart(35, \"p\", 6);\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"p\", 7);\n    i0.ɵɵtext(38);\n    i0.ɵɵpipe(39, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"div\", 5);\n    i0.ɵɵelementStart(41, \"p\", 6);\n    i0.ɵɵtext(42, \"Colgadas por agente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"p\", 7);\n    i0.ɵɵtext(44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"div\", 5);\n    i0.ɵɵelementStart(46, \"p\", 6);\n    i0.ɵɵtext(47, \"Perdidas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"p\", 7);\n    i0.ɵɵtext(49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(9, 11, ctx_r0.rows.displayInboundCallsIndicators[0].inboundReceived, \"1.0-0\"), \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(15, 14, ctx_r0.rows.displayInboundCallsIndicators[0].inboundAttended, \"1.0-0\"), \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(21, 17, ctx_r0.rows.displayInboundCallsIndicators[0].inboundAbandoned, \"1.0-0\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Cortas (menos de: \", ctx_r0.rows.displayInboundCallsIndicators[0].shortTimeDef, \"\\\")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(27, 20, ctx_r0.rows.displayInboundCallsIndicators[0].inboundShort, \"1.0-0\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Atendidas en menos de: \", ctx_r0.rows.displayInboundCallsIndicators[0].idealResponseTime, \"\\\" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(33, 23, ctx_r0.rows.displayInboundCallsIndicators[0].inboundBeforeTime, \"1.0-0\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Atendidas en m\\u00E1s de: \", ctx_r0.rows.displayInboundCallsIndicators[0].idealResponseTime, \"\\\" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(39, 26, ctx_r0.rows.displayInboundCallsIndicators[0].inboundAfterTime, \"1.0-0\"), \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.rows.displayInboundCallsIndicators[0].inboundHungAgent, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.rows.displayInboundCallsIndicators[0].inboundLostCallsTotal, \" \");\n} }\nvar DisplayInboundCallsComponent = /** @class */ (function () {\n    function DisplayInboundCallsComponent(modalService) {\n        this.modalService = modalService;\n    }\n    DisplayInboundCallsComponent.prototype.ngOnInit = function () {\n        // console.error('displayInboundCallsIndicators', this.displayInboundCallsIndicators);\n    };\n    DisplayInboundCallsComponent.prototype.openModal = function (content) {\n        this.modalService.open(content, {\n            size: \"lg\",\n            ariaLabelledBy: \"modal-basic-title\"\n        });\n    };\n    DisplayInboundCallsComponent.ɵfac = function DisplayInboundCallsComponent_Factory(t) { return new (t || DisplayInboundCallsComponent)(i0.ɵɵdirectiveInject(i1.NgbModal)); };\n    DisplayInboundCallsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundCallsComponent, selectors: [[\"app-display-inbound-calls\"]], inputs: { rows: \"rows\", userSelection: \"userSelection\" }, decls: 2, vars: 1, consts: [[1, \"frame\"], [\"class\", \"tablegraph\", 4, \"ngIf\"], [1, \"tablegraph\"], [\"id\", \"Calls\", 1, \"tablegraph-card\"], [1, \"tablegraph-subtitles\"], [1, \"tablegraph-table\"], [1, \"tablegraph-text\"], [1, \"tablegraph-number\"]], template: function DisplayInboundCallsComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"main\", 0);\n            i0.ɵɵtemplate(1, DisplayInboundCallsComponent_section_1_Template, 50, 29, \"section\", 1);\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.displayInboundCallsIndicators[0]);\n        } }, directives: [i2.NgIf], pipes: [i2.DecimalPipe], styles: [\".frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;border-radius:5px;min-height:50vh}.tablegraph[_ngcontent-%COMP%]{margin:0;padding:3px}.tablegraph-subtitles[_ngcontent-%COMP%]{margin:200;padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr;margin:0;padding:5px 5px 0}.tablegraph-table[_ngcontent-%COMP%]:hover{color:#242488;border:1px solid #5e5b5b;border-radius:5px;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.tablegraph-table[_ngcontent-%COMP%]:nth-child(even){background:#f2f2f2}.tablegraph-table[_ngcontent-%COMP%]:nth-child(odd){background:#fff}.tablegraph-table[_ngcontent-%COMP%]:first-child{background:#f2f2f2;margin-top:10px}.tablegraph-table[_ngcontent-%COMP%]:last-child{background:#fff;margin-bottom:10px}.tablegraph-text[_ngcontent-%COMP%]{font-size:1rem;padding:5px 20px 0 0;color:#495057}.tablegraph-number[_ngcontent-%COMP%]{text-align:right;font-size:1.4rem;font-weight:400;padding-top:0}.pointer[_ngcontent-%COMP%]{cursor:pointer}@media screen and (max-width:1200px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:992px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:3fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:768px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:576px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 1fr;margin:0;padding:5px 5px 0}}\"] });\n    return DisplayInboundCallsComponent;\n}());\nexport { DisplayInboundCallsComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundCallsComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-calls\",\n                templateUrl: \"./display-inbound-calls.component.html\",\n                styleUrls: [\"./display-inbound-calls.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.NgbModal }]; }, { rows: [{\n            type: Input\n        }], userSelection: [{\n            type: Input\n        }] }); })();\n","<main class=\"frame\">\n  <section class=\"tablegraph\" *ngIf=\"rows.displayInboundCallsIndicators[0]\">\n    <article id=\"Calls\" class=\"tablegraph-card\">\n\n      <p class=\"tablegraph-subtitles\">Llamadas</p>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Recibidas</p>\n\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundReceived | number:'1.0-0'}}\n        </p>\n      </div>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Atendidas</p>\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundAttended | number:'1.0-0' }}\n        </p>\n      </div>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Abandonadas</p>\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundAbandoned | number:'1.0-0' }}\n        </p>\n      </div>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Cortas (menos de:\n          {{ rows.displayInboundCallsIndicators[0].shortTimeDef}}\")</p>\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundShort | number:'1.0-0' }}\n        </p>\n      </div>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">\n          Atendidas en menos de: {{\n            rows.displayInboundCallsIndicators[0].idealResponseTime }}\"\n        </p>\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundBeforeTime | number:'1.0-0' }}\n        </p>\n      </div>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">\n          Atendidas en más de: {{\n              rows.displayInboundCallsIndicators[0].idealResponseTime }}\"\n        </p>\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundAfterTime | number:'1.0-0' }}\n        </p>\n      </div>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Colgadas por agente</p>\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundHungAgent  }}\n        </p>\n      </div>\n\n      <div class=\"tablegraph-table \">\n        <p class=\"tablegraph-text\">Perdidas</p>\n        <p class=\"tablegraph-number\">\n          {{ rows.displayInboundCallsIndicators[0].inboundLostCallsTotal  }}\n        </p>\n      </div>\n\n    </article>\n  </section>\n</main>","//  Angular\n\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { isNullOrUndefined } from \"util\";\n\nimport { throwError, Observable } from \"rxjs\";\nimport { tap, catchError, map } from \"rxjs/operators\";\n\nimport { EnvService } from \"shared/services/helpers/env.service\";\nimport { UserSelectionModel } from \"shared/models\";\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class DisplayInboundIndicatorsService {\n  constructor(private http: HttpClient, private env: EnvService) { }\n\n  headers: HttpHeaders = new HttpHeaders({\n    \"Content-Type\": \"application/json\"\n  });\n\n  private handleError(error: any) {\n    console.error(error);\n    return throwError(error);\n  }\n\n  getReportList(userSelection: UserSelectionModel): Observable<any> {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const url_api = `${this.env.loopbackApiUrl}/api/InvDisplays/displayInboundIndicators?access_token=${accessToken}`;\n    const res = this.http\n      .post(url_api, userSelection, {\n        headers: this.headers\n      })\n      .pipe(\n        map(data => data),\n        catchError(this.handleError)\n      );\n    return res;\n  }\n\n  // get Show valid userSelection\n  getDisplayShow(userSelection): Observable<any> {\n    const query = JSON.stringify(userSelection);\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const url_api = `${this.env.loopbackApiUrl}/api/InvDisplays/displayShow?access_token=${accessToken}`;\n    const res = this.http.post(url_api, query, { headers: this.headers });\n    // console.warn('Dashboard......' , url_api, query);\n\n    return res;\n  }\n\n\n  getReportListHistoric(userSelection: UserSelectionModel): Observable<any> {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const url_api = `${this.env.loopbackApiUrl}/api/InvDisplays/displayInboundIndicatorsHistoric?access_token=${accessToken}`;\n    const res = this.http\n      .post(url_api, userSelection, {\n        headers: this.headers\n      })\n      .pipe(\n        map(data => data),\n        catchError(this.handleError)\n      );\n    return res;\n  }\n}\n","//  Angular\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { EnvService } from \"shared/services/helpers/env.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"shared/services/helpers/env.service\";\nvar DisplayInboundIndicatorsService = /** @class */ (function () {\n    function DisplayInboundIndicatorsService(http, env) {\n        this.http = http;\n        this.env = env;\n        this.headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n    }\n    DisplayInboundIndicatorsService.prototype.handleError = function (error) {\n        console.error(error);\n        return throwError(error);\n    };\n    DisplayInboundIndicatorsService.prototype.getReportList = function (userSelection) {\n        var accessToken = localStorage.getItem(\"accessToken\");\n        var url_api = this.env.loopbackApiUrl + \"/api/InvDisplays/displayInboundIndicators?access_token=\" + accessToken;\n        var res = this.http\n            .post(url_api, userSelection, {\n            headers: this.headers\n        })\n            .pipe(map(function (data) { return data; }), catchError(this.handleError));\n        return res;\n    };\n    // get Show valid userSelection\n    DisplayInboundIndicatorsService.prototype.getDisplayShow = function (userSelection) {\n        var query = JSON.stringify(userSelection);\n        var accessToken = localStorage.getItem(\"accessToken\");\n        var url_api = this.env.loopbackApiUrl + \"/api/InvDisplays/displayShow?access_token=\" + accessToken;\n        var res = this.http.post(url_api, query, { headers: this.headers });\n        // console.warn('Dashboard......' , url_api, query);\n        return res;\n    };\n    DisplayInboundIndicatorsService.prototype.getReportListHistoric = function (userSelection) {\n        var accessToken = localStorage.getItem(\"accessToken\");\n        var url_api = this.env.loopbackApiUrl + \"/api/InvDisplays/displayInboundIndicatorsHistoric?access_token=\" + accessToken;\n        var res = this.http\n            .post(url_api, userSelection, {\n            headers: this.headers\n        })\n            .pipe(map(function (data) { return data; }), catchError(this.handleError));\n        return res;\n    };\n    DisplayInboundIndicatorsService.ɵfac = function DisplayInboundIndicatorsService_Factory(t) { return new (t || DisplayInboundIndicatorsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.EnvService)); };\n    DisplayInboundIndicatorsService.ɵprov = i0.ɵɵdefineInjectable({ token: DisplayInboundIndicatorsService, factory: DisplayInboundIndicatorsService.ɵfac, providedIn: \"root\" });\n    return DisplayInboundIndicatorsService;\n}());\nexport { DisplayInboundIndicatorsService };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundIndicatorsService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: i1.HttpClient }, { type: i2.EnvService }]; }, null); })();\n","export class DisplayInboundResponseModel {\n  displayInboundCallsIndicators: [\n    {\n      now;\n      day_name;\n      week_day;\n      start_date;\n      start_time;\n      end_time;\n      idealResponseTime;\n      shortTimeDef;\n      inboundReceived;\n      inboundAbandoned;\n      inboundAttended;\n      inboundShort;\n      inboundBeforeTime;\n      inboundAfterTime;\n      inboundHungAgent;\n      inboundServiceLevel;\n      inboundAttentionLevel;\n      inboundAbandonLevel;\n      operation_seconds;\n      operation_time;\n      wait_seconds;\n      wait_time;\n      inboundTmo;\n      inboundAsa;\n    }\n  ];\n  displayInboundCurrentCallsIndicators: [\n    {\n      now;\n      callsActive;\n      callsOnQueue;\n    }\n  ];\n  agentsPlannedTotal: [\n    {\n      now;\n      agentsPlannedTotal;\n    }\n  ];\n  agentsConnectedTotal: [\n    {\n      now;\n      agentsConnectedTotal;\n      agentsEffectiveTotal;\n    }\n  ];\n\n  agentsLoggedTotal: [\n    {\n      now;\n      agentsConnectedTotal;\n      agentsEffectiveTotal;\n    }\n  ];\n\n  agentsConnectedByGroup: [\n    {\n      now;\n      name;\n      color;\n      value;\n    }\n  ];\n\n  agentHistoricResume: [\n    {\n      now;\n      concept;\n      count_agents;\n      duration_agents;\n      average_agents;\n    }\n  ];\n\n  agentsAuxiliarResume: [\n    {\n      now;\n      name;\n      id;\n      value;\n      duration;\n    }\n  ];\n  agentsAssignationResume: [\n    {\n      now;\n      name;\n      id;\n      value;\n      duration;\n    }\n  ];\n  userSelection;\n  scale: any;\n  colors: any;\n\n  constructor() {\n    this.displayInboundCallsIndicators = [\n      {\n        now: \"\",\n        day_name: \"\",\n        week_day: \"\",\n        start_date: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        idealResponseTime: \"\",\n        shortTimeDef: \"\",\n        inboundReceived: \"\",\n        inboundAbandoned: \"\",\n        inboundAttended: \"\",\n        inboundShort: \"\",\n        inboundBeforeTime: \"\",\n        inboundAfterTime: \"\",\n        inboundHungAgent: \"\",\n        inboundServiceLevel: \"\",\n        inboundAttentionLevel: \"\",\n        inboundAbandonLevel: \"\",\n        operation_seconds: \"\",\n        operation_time: \"\",\n        wait_seconds: \"\",\n        wait_time: \"\",\n        inboundTmo: \"\",\n        inboundAsa: \"\"\n      }\n    ];\n\n    this.displayInboundCurrentCallsIndicators = [\n      {\n        now: \"\",\n        callsActive: \"\",\n        callsOnQueue: \"\"\n      }\n    ];\n\n    this.agentsPlannedTotal = [\n      {\n        now: \"\",\n        agentsPlannedTotal: \"\"\n      }\n    ];\n\n    this.agentsConnectedTotal = [\n      {\n        now: \"\",\n        agentsConnectedTotal: \"\",\n        agentsEffectiveTotal: \"\"\n      }\n    ];\n\n    this.agentsLoggedTotal = [\n      {\n        now: \"\",\n        agentsConnectedTotal: \"\",\n        agentsEffectiveTotal: \"\"\n      }\n    ];\n\n    this.agentsConnectedByGroup = [\n      {\n        now: \"\",\n        name: \"\",\n        color: \"\",\n        value: null\n      }\n    ];\n\n    this.agentHistoricResume = [\n      {\n        now: \"\",\n        concept: \"\",\n        count_agents: \"\",\n        duration_agents: \"\",\n        average_agents: \"\"\n      }\n    ];\n\n    this.agentsAuxiliarResume = [\n      {\n        now: \"\",\n        name: \"\",\n        id: \"\",\n        value: \"\",\n        duration: \"\"\n      }\n    ];\n\n    this.agentsAssignationResume = [\n      {\n        now: \"\",\n        name: \"\",\n        id: \"\",\n        value: \"\",\n        duration: \"\"\n      }\n    ];\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy\n} from \"@angular/core\";\n\nimport { Observable, Subscription, timer } from \"rxjs\";\n\nimport { UserSelectionModel } from \"shared/models\";\n\n@Component({\n  selector: \"app-display-display-inbound-graph\",\n  templateUrl: \"./display-inbound-graph.component.html\",\n  styleUrls: [\"./display-inbound-graph.component.scss\"]\n})\nexport class DisplayInboundGraphComponent implements OnInit, OnDestroy {\n  private subscription: Subscription = new Subscription();\n\n  @Input() userSelection: UserSelectionModel;\n  @Input() rows;\n\n  @Output() valueChange = new EventEmitter();\n\n  show = false;\n  stepinterval;\n\n  interval = new Observable();\n\n  barChartOptions;\n  barChartLabels: string[];\n  barChartColors: string[];\n  barChartType: string = \"bar\";\n  barChartLegend: boolean;\n  barChartData: any[];\n\n  timerConnected = 0;\n\n  constructor() {}\n\n  ngOnInit() {\n \n    (this.rows)\n    this.generateGraph(\"Internal\", this.rows);\n    const timerClock = timer(1000, 20000);\n\n    this.subscription.add(\n      timerClock.subscribe(() => {\n        // this.generateGraph();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  extractIndicators(rows) {\n    return rows.map(x => {\n      return {\n        llamadas_atendidas: x.inboundAttended,\n        llamadas_abandonadas: x.inboundAbandoned,\n        llamadas_atendidas_antes_de: x.inboundBeforeTime,\n        llamadas_atendidas_despues_de: x.inboundAfterTime,\n        nivel_servicio: x.inboundServiceLevel,\n        nivel_atencion: x.inboundAttentionLevel,\n        graphLabel: x.start_date\n      };\n    });\n  }\n\n  generateGraph(msg?: string, rows?, barChartData?) {\n    console.error(\"this.rows\", msg, rows);\n\n    let graphIndicators = this.extractIndicators(rows);\n\n    if (graphIndicators) {\n      let nivel_de_servicio = graphIndicators.map(x => {\n        return x.nivel_servicio * 100;\n      });\n      let nivel_de_atencion = graphIndicators.map(x => {\n        return x.nivel_atencion * 100;\n      });\n      let llamadas_atendidas = graphIndicators.map(x => {\n        return x.llamadas_atendidas;\n      });\n      let llamadas_abandonadas = graphIndicators.map(x => {\n        return x.llamadas_abandonadas;\n      });\n      let llamadas_atendidas_antes_de = graphIndicators.map(x => {\n        return x.llamadas_atendidas_antes_de;\n      });\n      let llamadas_atendidas_despues_de = graphIndicators.map(x => {\n        return x.llamadas_atendidas_despues_de;\n      });\n\n      let barChartLabels = graphIndicators.map(x => {\n        return x.graphLabel;\n      });\n\n      this.barChartLabels = barChartLabels;\n\n      this.barChartOptions = {\n        scaleShowVerticalLines: false,\n        responsive: true,\n        scales: {\n          xAxes: [\n            {\n              position: \"top\",\n              scaleFontSize: 40,\n              ticks: {\n                fontSize: 16\n              },\n              stacked: true,\n              scaleLabel: {\n                display: true,\n                labelString: `Linea temporal por intervalos`\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: \"A\",\n              type: \"linear\",\n              position: \"left\",\n              scalePositionLeft: true,\n              scaleFontSize: 40,\n              stacked: true,\n              scaleLabel: {\n                display: true,\n                labelString: \"Cantidad de llamadas\",\n                fontSize: 20\n              },\n              ticks: {\n                min: 0,\n                stepSize: this.stepinterval,\n                fontSize: 16\n              }\n            },\n            {\n              id: \"B\",\n              type: \"linear\",\n              position: \"right\",\n              scalePositionLeft: false,\n              stacked: true,\n              scaleLabel: {\n                display: true,\n                labelString: \"Porcentaje\",\n                fontSize: 20\n              },\n              ticks: {\n                min: 0,\n                max: 100,\n                fontSize: 16,\n                stepSize: 10\n              }\n            },\n            {\n              id: \"C\",\n              type: \"linear\",\n              position: \"right\",\n              scalePositionLeft: false,\n              stacked: true,\n              scaleLabel: {\n                display: false,\n                labelString: \"Porcentaje\",\n                fontSize: 20\n              },\n              ticks: {\n                display: false,\n                min: 0,\n                max: 100,\n                fontSize: 16,\n                stepSize: 10\n              }\n            }\n          ]\n        }\n      };\n\n      this.barChartData = [\n        {\n          data: nivel_de_servicio,\n          label: \"Nivel de servicio\",\n          borderColor: \"#03741d\",\n          backgroundColor: \"#03741d\",\n          type: \"line\",\n          yAxesGroup: \"C\",\n          yAxisID: \"C\",\n          fill: false\n        },\n\n        {\n          data: nivel_de_atencion,\n          label: \"Nivel de atencion\",\n          borderColor: \"#555\",\n          backgroundColor: \"#555\",\n          type: \"line\",\n          yAxesGroup: \"B\",\n          yAxisID: \"B\",\n          fill: false\n        },\n        {\n          data: llamadas_atendidas_antes_de,\n          label: `Atendidas antes de ${this.rows[0].idealResponseTime}\"`,\n          borderColor: \"#3e95cd\",\n          backgroundColor: \"#3e95cd\",\n          yAxisID: \"A\"\n        },\n        {\n          data: llamadas_atendidas_despues_de,\n          label: `Atendidas después de  ${this.rows[0].idealResponseTime}\"`,\n          borderColor: \"#e9a321\",\n          backgroundColor: \"#e9a321\",\n          yAxisID: \"A\"\n        },\n        {\n          data: llamadas_abandonadas,\n          label: \"Abandonadas\",\n          borderColor: \"#e9061d\",\n          backgroundColor: \"#e9061d\",\n          yAxisID: \"A\"\n        }\n      ];\n\n      this.show = true;\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\nimport { Observable, Subscription, timer } from \"rxjs\";\nimport { UserSelectionModel } from \"shared/models\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ng2-charts\";\nfunction DisplayInboundGraphComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"canvas\", 1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"chartType\", ctx_r0.barChartType)(\"colors\", ctx_r0.barChartColors)(\"legend\", ctx_r0.barChartLegend)(\"labels\", ctx_r0.barChartLabels)(\"datasets\", ctx_r0.barChartData)(\"options\", ctx_r0.barChartOptions);\n} }\nvar DisplayInboundGraphComponent = /** @class */ (function () {\n    function DisplayInboundGraphComponent() {\n        this.subscription = new Subscription();\n        this.valueChange = new EventEmitter();\n        this.show = false;\n        this.interval = new Observable();\n        this.barChartType = \"bar\";\n        this.timerConnected = 0;\n    }\n    DisplayInboundGraphComponent.prototype.ngOnInit = function () {\n        (this.rows);\n        this.generateGraph(\"Internal\", this.rows);\n        var timerClock = timer(1000, 20000);\n        this.subscription.add(timerClock.subscribe(function () {\n            // this.generateGraph();\n        }));\n    };\n    DisplayInboundGraphComponent.prototype.ngOnDestroy = function () {\n        this.subscription.unsubscribe();\n    };\n    DisplayInboundGraphComponent.prototype.extractIndicators = function (rows) {\n        return rows.map(function (x) {\n            return {\n                llamadas_atendidas: x.inboundAttended,\n                llamadas_abandonadas: x.inboundAbandoned,\n                llamadas_atendidas_antes_de: x.inboundBeforeTime,\n                llamadas_atendidas_despues_de: x.inboundAfterTime,\n                nivel_servicio: x.inboundServiceLevel,\n                nivel_atencion: x.inboundAttentionLevel,\n                graphLabel: x.start_date\n            };\n        });\n    };\n    DisplayInboundGraphComponent.prototype.generateGraph = function (msg, rows, barChartData) {\n        console.error(\"this.rows\", msg, rows);\n        var graphIndicators = this.extractIndicators(rows);\n        if (graphIndicators) {\n            var nivel_de_servicio = graphIndicators.map(function (x) {\n                return x.nivel_servicio * 100;\n            });\n            var nivel_de_atencion = graphIndicators.map(function (x) {\n                return x.nivel_atencion * 100;\n            });\n            var llamadas_atendidas = graphIndicators.map(function (x) {\n                return x.llamadas_atendidas;\n            });\n            var llamadas_abandonadas = graphIndicators.map(function (x) {\n                return x.llamadas_abandonadas;\n            });\n            var llamadas_atendidas_antes_de = graphIndicators.map(function (x) {\n                return x.llamadas_atendidas_antes_de;\n            });\n            var llamadas_atendidas_despues_de = graphIndicators.map(function (x) {\n                return x.llamadas_atendidas_despues_de;\n            });\n            var barChartLabels = graphIndicators.map(function (x) {\n                return x.graphLabel;\n            });\n            this.barChartLabels = barChartLabels;\n            this.barChartOptions = {\n                scaleShowVerticalLines: false,\n                responsive: true,\n                scales: {\n                    xAxes: [\n                        {\n                            position: \"top\",\n                            scaleFontSize: 40,\n                            ticks: {\n                                fontSize: 16\n                            },\n                            stacked: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Linea temporal por intervalos\"\n                            }\n                        }\n                    ],\n                    yAxes: [\n                        {\n                            id: \"A\",\n                            type: \"linear\",\n                            position: \"left\",\n                            scalePositionLeft: true,\n                            scaleFontSize: 40,\n                            stacked: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Cantidad de llamadas\",\n                                fontSize: 20\n                            },\n                            ticks: {\n                                min: 0,\n                                stepSize: this.stepinterval,\n                                fontSize: 16\n                            }\n                        },\n                        {\n                            id: \"B\",\n                            type: \"linear\",\n                            position: \"right\",\n                            scalePositionLeft: false,\n                            stacked: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Porcentaje\",\n                                fontSize: 20\n                            },\n                            ticks: {\n                                min: 0,\n                                max: 100,\n                                fontSize: 16,\n                                stepSize: 10\n                            }\n                        },\n                        {\n                            id: \"C\",\n                            type: \"linear\",\n                            position: \"right\",\n                            scalePositionLeft: false,\n                            stacked: true,\n                            scaleLabel: {\n                                display: false,\n                                labelString: \"Porcentaje\",\n                                fontSize: 20\n                            },\n                            ticks: {\n                                display: false,\n                                min: 0,\n                                max: 100,\n                                fontSize: 16,\n                                stepSize: 10\n                            }\n                        }\n                    ]\n                }\n            };\n            this.barChartData = [\n                {\n                    data: nivel_de_servicio,\n                    label: \"Nivel de servicio\",\n                    borderColor: \"#03741d\",\n                    backgroundColor: \"#03741d\",\n                    type: \"line\",\n                    yAxesGroup: \"C\",\n                    yAxisID: \"C\",\n                    fill: false\n                },\n                {\n                    data: nivel_de_atencion,\n                    label: \"Nivel de atencion\",\n                    borderColor: \"#555\",\n                    backgroundColor: \"#555\",\n                    type: \"line\",\n                    yAxesGroup: \"B\",\n                    yAxisID: \"B\",\n                    fill: false\n                },\n                {\n                    data: llamadas_atendidas_antes_de,\n                    label: \"Atendidas antes de \" + this.rows[0].idealResponseTime + \"\\\"\",\n                    borderColor: \"#3e95cd\",\n                    backgroundColor: \"#3e95cd\",\n                    yAxisID: \"A\"\n                },\n                {\n                    data: llamadas_atendidas_despues_de,\n                    label: \"Atendidas despu\\u00E9s de  \" + this.rows[0].idealResponseTime + \"\\\"\",\n                    borderColor: \"#e9a321\",\n                    backgroundColor: \"#e9a321\",\n                    yAxisID: \"A\"\n                },\n                {\n                    data: llamadas_abandonadas,\n                    label: \"Abandonadas\",\n                    borderColor: \"#e9061d\",\n                    backgroundColor: \"#e9061d\",\n                    yAxisID: \"A\"\n                }\n            ];\n            this.show = true;\n        }\n    };\n    DisplayInboundGraphComponent.ɵfac = function DisplayInboundGraphComponent_Factory(t) { return new (t || DisplayInboundGraphComponent)(); };\n    DisplayInboundGraphComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundGraphComponent, selectors: [[\"app-display-display-inbound-graph\"]], inputs: { userSelection: \"userSelection\", rows: \"rows\" }, outputs: { valueChange: \"valueChange\" }, decls: 1, vars: 1, consts: [[4, \"ngIf\"], [\"baseChart\", \"\", \"width\", \"100\", \"height\", \"25\", 3, \"chartType\", \"colors\", \"legend\", \"labels\", \"datasets\", \"options\"]], template: function DisplayInboundGraphComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, DisplayInboundGraphComponent_div_0_Template, 2, 6, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.show);\n        } }, directives: [i1.NgIf, i2.BaseChartDirective], styles: [\".button-area[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 2fr;grid-gap:1rem}.btn[_ngcontent-%COMP%], .submenu-btn[_ngcontent-%COMP%]{font-size:1rem;margin-right:3px}.submenu-field[_ngcontent-%COMP%]{width:40%}.report[_ngcontent-%COMP%]{margin:20px}.agent-box[_ngcontent-%COMP%]{font-size:.9rem}.mycontainer[_ngcontent-%COMP%]{padding:0;margin:10px}.subtiulo[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr}.small_tittle[_ngcontent-%COMP%]{font-size:.8rem;color:grey}.botonera[_ngcontent-%COMP%], .button-area[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}.alerta[_ngcontent-%COMP%]{background:#fff3cd;color:856404}.identificacion-reporte[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2em}.identificacion-reporte[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{font-size:.9em}.indicadores[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:.9em;margin-top:1em;font-weight:800;text-align:right}.indicadores[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{font-size:2em;text-align:right;color:#fff}.indicadores[_ngcontent-%COMP%]   .row-eq-height[_ngcontent-%COMP%]{display:flex}.table[_ngcontent-%COMP%]{font-size:.8em}.table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{line-height:25px;min-height:25px;height:25px}.table[_ngcontent-%COMP%]   .numero[_ngcontent-%COMP%]{font-size:1.8em;font-weight:800;text-align:right}.tablas[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{background:#adb5bd;padding:5px;font-size:.9em;margin-top:1em;font-weight:800;text-align:center}.panel[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-top:1em;font-size:1.2em}.table-column[_ngcontent-%COMP%]    {background:0 0}.table-column[_ngcontent-%COMP%]:hover    {background:0 0}.table-column[_ngcontent-%COMP%]   .right-black-normal[_ngcontent-%COMP%]{font-size:1rem;text-align:center}.pointer[_ngcontent-%COMP%]{cursor:pointer}.si-conectado[_ngcontent-%COMP%]{color:green}.no-conectado[_ngcontent-%COMP%]{color:red}.detail-button[_ngcontent-%COMP%]{color:#00f}.detail-button[_ngcontent-%COMP%]:hover{color:#ff0}.celda_derecha_azul[_ngcontent-%COMP%]{color:#00f;text-align:right}.celda_derecha_verde[_ngcontent-%COMP%]{color:#006400;text-align:right}.celda_derecha_gris[_ngcontent-%COMP%]{color:#ff4500;text-align:right}.celda_derecha_rojo[_ngcontent-%COMP%]{color:red;text-align:right}.celda_derecha_negro[_ngcontent-%COMP%]{color:#333232;text-align:right}.celda_derecha[_ngcontent-%COMP%]{color:#000;text-align:right}.left-black-bold[_ngcontent-%COMP%]{color:#000;text-align:left;font-weight:600}.left-black-normal[_ngcontent-%COMP%]{color:#000;text-align:left}.right-black-bold[_ngcontent-%COMP%]{color:#000;text-decoration:none;text-align:right;font-weight:600}.right-black-normal[_ngcontent-%COMP%]{color:#000!important;text-align:right!important}.main[_ngcontent-%COMP%]{margin:10px;padding:5px;background:#dbd8d8}.main[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   .register-form[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;background:#fff;padding:5px;grid-gap:0 .5rem 0 .5rem}.main[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   .register-form[_ngcontent-%COMP%]   .register-column[_ngcontent-%COMP%]{background:#add8e6;padding:1rem;margin:1rem}.main[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   .register-form[_ngcontent-%COMP%]   .register-column[_ngcontent-%COMP%]   .two-column[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 5fr;grid-gap:1rem;background:#8cc7db}.main[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   .register-form[_ngcontent-%COMP%]   .register-column[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{margin:3px;padding:0}.main[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   .register-form[_ngcontent-%COMP%]   .register-column[_ngcontent-%COMP%]   .register-label[_ngcontent-%COMP%]{color:#353232;font-size:1rem}.main[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   .register-form[_ngcontent-%COMP%]   .register-column[_ngcontent-%COMP%]   .register-input[_ngcontent-%COMP%]{color:red;font-size:1rem}.main[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   .register-form[_ngcontent-%COMP%]   .register-column[_ngcontent-%COMP%]   .register-error[_ngcontent-%COMP%]{color:red;font-size:.8rem}.main[_ngcontent-%COMP%]   .submenu[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 4fr;grid-gap:1rem}.main[_ngcontent-%COMP%]   .submenu-btn[_ngcontent-%COMP%]{font-size:.8rem;margin:10px;padding:2px 10px}.main[_ngcontent-%COMP%]   .submenu-buttons[_ngcontent-%COMP%]{display:flex;justify-content:flex-start}.main[_ngcontent-%COMP%]   .submenu-buttons2[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr 1fr;grid-gap:1rem}.main[_ngcontent-%COMP%]   .button-group[_ngcontent-%COMP%]{display:flex;flex-direction:row}.main[_ngcontent-%COMP%]   .register-button[_ngcontent-%COMP%]{font-size:1.1rem;margin-left:3px}\"] });\n    return DisplayInboundGraphComponent;\n}());\nexport { DisplayInboundGraphComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundGraphComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-display-inbound-graph\",\n                templateUrl: \"./display-inbound-graph.component.html\",\n                styleUrls: [\"./display-inbound-graph.component.scss\"]\n            }]\n    }], function () { return []; }, { userSelection: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], valueChange: [{\n            type: Output\n        }] }); })();\n","<div *ngIf=\"show\">\n\n  <canvas baseChart width=\"100\" height=\"25\" [chartType]=\"barChartType\"\n          [colors]=\"barChartColors\" [legend]=\"barChartLegend\"\n          [labels]=\"barChartLabels\" [datasets]=\"barChartData\"\n          [options]=\"barChartOptions\">\n  </canvas>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n@Component({\n  selector: 'app-display-inbound-agents-distribution',\n  templateUrl: './display-inbound-agents-distribution.component.html',\n  styleUrls: ['./display-inbound-agents-distribution.component.scss']\n})\nexport class DisplayInboundAgentsDistributionComponent implements OnInit {\n\n  @Input() userSelection;\n  @Input()  rows;\n\n  faUser=faUser;\n\n   constructor() { }\n  \n   ngOnInit() {\n    \n   }\n\n\n getColor(color) {\n  return color;\n}\n\n\ngetValues(data) {\nreturn data\n.map(x => {\nreturn x.value;\n});\n}\n\n\ngetLabels(data) {\nreturn data\n.map(x => {\nreturn x.name;\n});\n}\n\ngetTotal(data ) {\nreturn data\n.map(x => {\nreturn x.value;\n})\n.reduce( (x, y) => {\nreturn x + y;\n});\n}\n\n\nmergeColor( array1, colors) {\nconst result = array1;\n\nconst merged =\narray1\n.map((x,  index) => {\nreturn  [colors[index]];\n});\n\n}\n\n  \n  }\n","import { Component, Input } from '@angular/core';\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@fortawesome/angular-fontawesome\";\nvar _c0 = function (a0) { return { \"color\": a0 }; };\nfunction DisplayInboundAgentsDistributionComponent_ul_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 2);\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"p\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 6);\n    i0.ɵɵelement(7, \"fa-icon\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"percent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\", 9);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.value, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(7, _c0, ctx_r0.getColor(item_r1.color)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r0.faUser);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(10, 5, item_r1.value / ctx_r0.rows.agentsConnectedTotal[0].agentsConnectedTotal), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \\u00A0\", item_r1.name, \" \");\n} }\nvar DisplayInboundAgentsDistributionComponent = /** @class */ (function () {\n    function DisplayInboundAgentsDistributionComponent() {\n        this.faUser = faUser;\n    }\n    DisplayInboundAgentsDistributionComponent.prototype.ngOnInit = function () {\n    };\n    DisplayInboundAgentsDistributionComponent.prototype.getColor = function (color) {\n        return color;\n    };\n    DisplayInboundAgentsDistributionComponent.prototype.getValues = function (data) {\n        return data\n            .map(function (x) {\n            return x.value;\n        });\n    };\n    DisplayInboundAgentsDistributionComponent.prototype.getLabels = function (data) {\n        return data\n            .map(function (x) {\n            return x.name;\n        });\n    };\n    DisplayInboundAgentsDistributionComponent.prototype.getTotal = function (data) {\n        return data\n            .map(function (x) {\n            return x.value;\n        })\n            .reduce(function (x, y) {\n            return x + y;\n        });\n    };\n    DisplayInboundAgentsDistributionComponent.prototype.mergeColor = function (array1, colors) {\n        var result = array1;\n        var merged = array1\n            .map(function (x, index) {\n            return [colors[index]];\n        });\n    };\n    DisplayInboundAgentsDistributionComponent.ɵfac = function DisplayInboundAgentsDistributionComponent_Factory(t) { return new (t || DisplayInboundAgentsDistributionComponent)(); };\n    DisplayInboundAgentsDistributionComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundAgentsDistributionComponent, selectors: [[\"app-display-inbound-agents-distribution\"]], inputs: { userSelection: \"userSelection\", rows: \"rows\" }, decls: 2, vars: 1, consts: [[1, \"indicadores\"], [\"class\", \"inidcadores-items\", 4, \"ngFor\", \"ngForOf\"], [1, \"inidcadores-items\"], [1, \"table\"], [1, \"element\"], [1, \"indicadores-cantidad\"], [1, \"indicadores-cantidad\", 3, \"ngStyle\"], [3, \"icon\"], [1, \"indicadores-porcentaje\"], [1, \"indicadores-descripcion\", \"text-left\"]], template: function DisplayInboundAgentsDistributionComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"section\", 0);\n            i0.ɵɵtemplate(1, DisplayInboundAgentsDistributionComponent_ul_1_Template, 13, 9, \"ul\", 1);\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.rows.agentsConnectedByGroup);\n        } }, directives: [i1.NgForOf, i1.NgStyle, i2.FaIconComponent], pipes: [i1.PercentPipe], styles: [\".frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;border-radius:5px;min-height:50vh}.tablegraph[_ngcontent-%COMP%]{margin:0;padding:3px}.tablegraph-subtitles[_ngcontent-%COMP%]{margin:200;padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr;margin:0;padding:5px 5px 0}.tablegraph-table[_ngcontent-%COMP%]:hover{color:#242488;border:1px solid #5e5b5b;border-radius:5px;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.tablegraph-table[_ngcontent-%COMP%]:nth-child(even){background:#f2f2f2}.tablegraph-table[_ngcontent-%COMP%]:nth-child(odd){background:#fff}.tablegraph-table[_ngcontent-%COMP%]:first-child{background:#f2f2f2;margin-top:10px}.tablegraph-table[_ngcontent-%COMP%]:last-child{background:#fff;margin-bottom:10px}.tablegraph-text[_ngcontent-%COMP%]{font-size:1rem;padding:5px 20px 0 0;color:#495057}.tablegraph-number[_ngcontent-%COMP%]{text-align:right;font-size:1.4rem;font-weight:400;padding-top:0}.pointer[_ngcontent-%COMP%]{cursor:pointer}@media screen and (max-width:1200px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:992px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:3fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:768px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 1fr;margin:0;padding:5px 5px 0}}@media screen and (max-width:576px){.tablegraph-table[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 1fr;margin:0;padding:5px 5px 0}}.table[_ngcontent-%COMP%]{display:flex}.element[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 4fr;grid-gap:1px 5px 1px 1px}.indicadores[_ngcontent-%COMP%]{margin:10px;font-size:1rem;color:gray}.indicadores-cantidad[_ngcontent-%COMP%]{font-size:1.5rem;max-width:40%}.indicadores-descripcion[_ngcontent-%COMP%]{max-width:50%}.indicadores-porcentaje[_ngcontent-%COMP%]{max-width:10%}.indicadores-subtitles[_ngcontent-%COMP%]{margin:200;padding:3px 0 .5rem;background:#d3d3d3;font-size:1rem;font-weight:400;text-align:center}\"] });\n    return DisplayInboundAgentsDistributionComponent;\n}());\nexport { DisplayInboundAgentsDistributionComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundAgentsDistributionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'app-display-inbound-agents-distribution',\n                templateUrl: './display-inbound-agents-distribution.component.html',\n                styleUrls: ['./display-inbound-agents-distribution.component.scss']\n            }]\n    }], function () { return []; }, { userSelection: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }] }); })();\n","<section class=\"indicadores\">\n  <ul *ngFor=\"let item of rows.agentsConnectedByGroup\"\n      class=\"inidcadores-items\">\n    <li>\n      <div class=\"table\">\n        <div class=\"element\">\n          <p class=\"indicadores-cantidad\"> {{ item.value}} </p>\n          <p class=\"indicadores-cantidad\"\n             [ngStyle]=\"{ 'color': getColor(item.color) }\">\n             <!-- <i class=\"fas fa-user\"></i>  -->\n             <fa-icon [icon]=\"faUser\"></fa-icon>\n            </p>\n          <p class=\"indicadores-porcentaje\">\n            {{ (item.value / (rows.agentsConnectedTotal[0].agentsConnectedTotal)) | percent }}\n          </p>\n          <p class=\"indicadores-descripcion text-left\"> &nbsp;{{ item.name}}\n          </p>\n        </div>\n      </div>\n    </li>\n\n  </ul>\n\n</section>","import { Component, OnInit, Input, TemplateRef } from \"@angular/core\";\nimport { UserSelectionModel } from \"shared/models\";\n\nimport { InvScaleService } from \"shared/services/crud/inv/inv-scale.service\";\nimport { InvScaleModel } from \"shared/models\";\n\n@Component({\n  selector: \"app-display-inbound-highlights\",\n  templateUrl: \"./display-inbound-highlights.component.html\",\n  styleUrls: [\"./display-inbound-highlights.component.scss\"]\n})\nexport class DisplayInboundHighlightsComponent implements OnInit {\n  @Input() userSelection;\n  @Input() rows;\n\n  constructor(private invScaleService: InvScaleService) {}\n\n  ngOnInit() {}\n\n  onExtractVariables(rows) {}\n\n  onColorClass(color) {\n    return `indicator-cell ${color}`;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { InvScaleService } from \"shared/services/crud/inv/inv-scale.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"shared/services/crud/inv/inv-scale.service\";\nimport * as i2 from \"@angular/common\";\nfunction DisplayInboundHighlightsComponent_main_0_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"p\", 5);\n    i0.ɵɵtext(2, \"Nivel de servicio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"percent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"indicator-cell \", ctx_r1.rows.colors[0].inboundServiceLevel, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Base c\\u00E1lculo = \", ctx_r1.rows.displayInboundCallsIndicators[0].idealResponseTime, \"\\\"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 5, ctx_r1.rows.displayInboundCallsIndicators[0].inboundServiceLevel, \"1.2-2\"), \" \");\n} }\nfunction DisplayInboundHighlightsComponent_main_0_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"p\", 5);\n    i0.ɵɵtext(2, \"Nivel de atenci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"percent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"indicator-cell \", ctx_r2.rows.colors[0].inboundAttentionLevel, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(5, 4, ctx_r2.rows.displayInboundCallsIndicators[0].inboundAttentionLevel, \"1.2-2\"), \" \");\n} }\nfunction DisplayInboundHighlightsComponent_main_0_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"p\", 5);\n    i0.ɵɵtext(2, \"Llamadas\");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtext(4, \"en cola\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"indicator-cell \", ctx_r3.rows.colors[0].callsOnQueue, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.rows.displayInboundCurrentCallsIndicators[0].callsOnQueue, \" \");\n} }\nfunction DisplayInboundHighlightsComponent_main_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"main\", 1);\n    i0.ɵɵelementStart(1, \"article\", 2);\n    i0.ɵɵtemplate(2, DisplayInboundHighlightsComponent_main_0_div_2_Template, 8, 8, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"article\", 2);\n    i0.ɵɵtemplate(4, DisplayInboundHighlightsComponent_main_0_div_4_Template, 6, 7, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"article\", 2);\n    i0.ɵɵtemplate(6, DisplayInboundHighlightsComponent_main_0_div_6_Template, 7, 4, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"article\", 2);\n    i0.ɵɵelementStart(8, \"div\", 4);\n    i0.ɵɵelementStart(9, \"p\", 5);\n    i0.ɵɵtext(10, \"Llamadas\");\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵtext(12, \"activas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 6);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"article\", 2);\n    i0.ɵɵelementStart(16, \"div\", 7);\n    i0.ɵɵelementStart(17, \"p\", 5);\n    i0.ɵɵtext(18, \"Agentes\");\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵtext(20, \"planificados\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"p\", 6);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"article\", 2);\n    i0.ɵɵelementStart(24, \"div\", 7);\n    i0.ɵɵelementStart(25, \"p\", 5);\n    i0.ɵɵtext(26, \"Agentes\");\n    i0.ɵɵelement(27, \"br\");\n    i0.ɵɵtext(28, \"conectados\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"p\", 6);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"article\", 2);\n    i0.ɵɵelementStart(32, \"div\", 7);\n    i0.ɵɵelementStart(33, \"p\", 5);\n    i0.ɵɵtext(34, \"Agentes\");\n    i0.ɵɵelement(35, \"br\");\n    i0.ɵɵtext(36, \"efectivos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"p\", 6);\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"article\", 2);\n    i0.ɵɵelementStart(40, \"div\", 7);\n    i0.ɵɵelementStart(41, \"p\", 5);\n    i0.ɵɵtext(42, \"TMO\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"p\", 6);\n    i0.ɵɵtext(44);\n    i0.ɵɵpipe(45, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rows.colors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rows.colors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rows.colors);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.rows.displayInboundCurrentCallsIndicators[0].callsActive, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.rows.agentsPlannedTotal[0].agentsPlannedTotal, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.rows.agentsConnectedTotal[0].agentsConnectedTotal, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.rows.agentsConnectedTotal[0].agentsEffectiveTotal, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(45, 8, ctx_r0.rows.displayInboundCallsIndicators[0].inboundTmo, \"1.0-0\"), \" \");\n} }\nvar DisplayInboundHighlightsComponent = /** @class */ (function () {\n    function DisplayInboundHighlightsComponent(invScaleService) {\n        this.invScaleService = invScaleService;\n    }\n    DisplayInboundHighlightsComponent.prototype.ngOnInit = function () { };\n    DisplayInboundHighlightsComponent.prototype.onExtractVariables = function (rows) { };\n    DisplayInboundHighlightsComponent.prototype.onColorClass = function (color) {\n        return \"indicator-cell \" + color;\n    };\n    DisplayInboundHighlightsComponent.ɵfac = function DisplayInboundHighlightsComponent_Factory(t) { return new (t || DisplayInboundHighlightsComponent)(i0.ɵɵdirectiveInject(i1.InvScaleService)); };\n    DisplayInboundHighlightsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundHighlightsComponent, selectors: [[\"app-display-inbound-highlights\"]], inputs: { userSelection: \"userSelection\", rows: \"rows\" }, decls: 1, vars: 1, consts: [[\"class\", \"grid\", 4, \"ngIf\"], [1, \"grid\"], [1, \"frame\"], [3, \"class\", 4, \"ngIf\"], [1, \"indicator-cell\"], [1, \"indicator-label\"], [1, \"indicator-number\"], [1, \"indicator-cell\", \"gray\"], [1, \"indicator-note\"]], template: function DisplayInboundHighlightsComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, DisplayInboundHighlightsComponent_main_0_Template, 46, 11, \"main\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.rows);\n        } }, directives: [i2.NgIf], pipes: [i2.DecimalPipe, i2.PercentPipe], styles: [\".blue[_ngcontent-%COMP%]{background:#0e41e9;color:#fff;border-radius:5px}.blue[_ngcontent-%COMP%]:hover{background:#0c3acf}.green[_ngcontent-%COMP%]{background:#34bb22;border-radius:5px}.green[_ngcontent-%COMP%]:hover{background:#2ca01d}.yellow[_ngcontent-%COMP%]{background:#f5f52d;border-radius:5px}.yellow[_ngcontent-%COMP%]:hover{background:#cece25;border-radius:5px}.red[_ngcontent-%COMP%]{background:#ce2424;color:#fff;border-radius:5px}.gray[_ngcontent-%COMP%]{background:#e6e4e4;border-radius:5px}.gray[_ngcontent-%COMP%]:hover{background:#c2bfbf}.frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;border-radius:5px;padding:3px 1px}.frame[_ngcontent-%COMP%]:hover{box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:2.1fr 2.1fr 1fr 1fr 1fr 1fr 1fr 1fr;grid-gap:.5rem}.indicator-cell[_ngcontent-%COMP%]{flex:1;padding:5px 20px;margin:0 3px;min-height:7rem;position:relative}.indicator-pointer[_ngcontent-%COMP%]{cursor:pointer}.indicator-label[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:400;text-align:center;margin-bottom:3px}.indicator-note[_ngcontent-%COMP%]{font-size:.8rem;text-align:center}.indicator-number[_ngcontent-%COMP%]{font-size:2.8rem;position:absolute;left:0;bottom:0;width:100%;text-align:center}@media screen and (max-width:1200px){.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr 1fr 1fr;grid-gap:.5rem}}@media screen and (max-width:992px){.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 2fr;grid-gap:.5rem}}@media screen and (max-width:576px){.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr;grid-gap:.5rem}}\"] });\n    return DisplayInboundHighlightsComponent;\n}());\nexport { DisplayInboundHighlightsComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundHighlightsComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-highlights\",\n                templateUrl: \"./display-inbound-highlights.component.html\",\n                styleUrls: [\"./display-inbound-highlights.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.InvScaleService }]; }, { userSelection: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }] }); })();\n","<main class=\"grid\" *ngIf=\"rows\">\n\n  <!-- LEVELS -->\n\n\n\n  <!-- Nivel de servicio -->\n  <article class=\" frame\">\n    <div class=\"indicator-cell {{rows.colors[0].inboundServiceLevel}}\"\n         *ngIf=\"rows.colors\">\n      <!-- <div class=\"indicator-cell \"> -->\n      <p class=\"indicator-label\">Nivel de servicio</p>\n      <p class=\"indicator-note\">Base cálculo =\n        {{rows.displayInboundCallsIndicators[0].idealResponseTime}}\"</p>\n      <p class=\"indicator-number \">\n        {{\n            rows.displayInboundCallsIndicators[0]\n              .inboundServiceLevel | percent: \"1.2-2\"\n          }}\n      </p>\n    </div>\n\n  </article>\n\n\n  <!-- Nivel de atención -->\n  <article class=\" frame\">\n    <div class=\"indicator-cell {{rows.colors[0].inboundAttentionLevel}}\"\n         *ngIf=\"rows.colors\">\n      <p class=\"indicator-label\">Nivel de atención</p>\n      <p class=\"indicator-number \">\n        {{\n              rows.displayInboundCallsIndicators[0]\n                .inboundAttentionLevel | percent: \"1.2-2\"\n            }}\n    </div>\n  </article>\n\n\n  <!-- CALLS -->\n\n\n  <!-- Llamadas en cola -->\n  <article class=\" frame\">\n    <div class=\"indicator-cell {{rows.colors[0].callsOnQueue}}\"\n         *ngIf=\"rows.colors\">\n      <p class=\"indicator-label\">Llamadas<br />en cola</p>\n      <p class=\"indicator-number \">\n        {{\n          rows.displayInboundCurrentCallsIndicators[0]\n                .callsOnQueue\n            }}\n      </p>\n    </div>\n  </article>\n\n\n  <!-- Llamadas activas -->\n  <article class=\" frame\">\n    <div class=\"indicator-cell\">\n      <p class=\"indicator-label\">Llamadas<br />activas</p>\n      <p class=\"indicator-number \">\n        {{\n                      rows.displayInboundCurrentCallsIndicators[0]\n                        .callsActive\n                    }}\n      </p>\n    </div>\n  </article>\n\n\n  <!-- GRAY INDICATORS -->\n\n\n  <!-- Agentes planificados -->\n  <article class=\" frame\">\n    <div class=\"indicator-cell gray\">\n      <p class=\"indicator-label\">Agentes<br />planificados</p>\n      <p class=\"indicator-number \">\n        {{\n                      rows.agentsPlannedTotal[0]\n                        .agentsPlannedTotal\n                    }}\n      </p>\n    </div>\n  </article>\n\n\n  <!-- Agentes conectados -->\n  <article class=\"frame\">\n    <div class=\"indicator-cell gray\">\n      <p class=\"indicator-label\">Agentes<br />conectados</p>\n      <p class=\"indicator-number \">\n        {{\n                  rows.agentsConnectedTotal[0]\n                    .agentsConnectedTotal\n                }}\n      </p>\n    </div>\n  </article>\n\n  <!-- Agentes efectivos -->\n  <article class=\"frame\">\n    <div class=\"indicator-cell gray\">\n      <p class=\"indicator-label\">Agentes<br />efectivos</p>\n      <p class=\"indicator-number \">\n        {{\n                  rows.agentsConnectedTotal[0]\n                    .agentsEffectiveTotal\n                }}\n      </p>\n    </div>\n  </article>\n\n  <!-- TMO -->\n  <article class=\"frame\">\n    <div class=\"indicator-cell gray\">\n      <p class=\"indicator-label\">TMO</p>\n      <p class=\"indicator-number \">\n        {{\n                  rows.displayInboundCallsIndicators[0]\n                    .inboundTmo | number: \"1.0-0\"\n                }}\n      </p>\n    </div>\n  </article>\n\n\n</main>","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-display-inbound-breaks-assignations\",\n  templateUrl: \"./display-inbound-breaks-assignations.component.html\",\n  styleUrls: [\"./display-inbound-breaks-assignations.component.scss\"]\n})\nexport class DisplayInboundBreaksAssignationsComponent implements OnInit {\n  @Input() rows;\n  @Input() userSelection;\n\n  assigned;\n\n  constructor(private modalService: NgbModal) {}\n\n  ngOnInit() {}\n\n  openModal(content) {\n    this.modalService.open(content, {\n      size: \"lg\",\n      ariaLabelledBy: \"modal-basic-title\"\n    });\n  }\n\n  selectLine(content, id) {\n    this.userSelection.selected_break = id;\n    this.modalService.open(content, {\n      size: \"lg\",\n      ariaLabelledBy: \"modal-basic-title\"\n    });\n\n    // console.error('name',id, this.userSelection);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../../../../../../shared/pipes/shortNames.pipe\";\nfunction DisplayInboundBreaksAssignationsComponent_p_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" Agentes en asignaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n} }\nfunction DisplayInboundBreaksAssignationsComponent_article_3_ul_1_Template(rf, ctx) { if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 6);\n    i0.ɵɵelementStart(1, \"li\", 7);\n    i0.ɵɵlistener(\"click\", function DisplayInboundBreaksAssignationsComponent_article_3_ul_1_Template_li_click_1_listener() { i0.ɵɵrestoreView(_r5); var item_r3 = ctx.$implicit; var ctx_r4 = i0.ɵɵnextContext(2); return ctx_r4.selectLine(ctx_r4.assigned, item_r3.id); });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"li\", 8);\n    i0.ɵɵlistener(\"click\", function DisplayInboundBreaksAssignationsComponent_article_3_ul_1_Template_li_click_3_listener() { i0.ɵɵrestoreView(_r5); var item_r3 = ctx.$implicit; var ctx_r6 = i0.ɵɵnextContext(2); return ctx_r6.selectLine(ctx_r6.assigned, item_r3.id); });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"shortNames\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"li\", 9);\n    i0.ɵɵlistener(\"click\", function DisplayInboundBreaksAssignationsComponent_article_3_ul_1_Template_li_click_6_listener() { i0.ɵɵrestoreView(_r5); var item_r3 = ctx.$implicit; var ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.selectLine(ctx_r7.assigned, item_r3.id); });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 3, item_r3.name), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.duration, \" \");\n} }\nfunction DisplayInboundBreaksAssignationsComponent_article_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"article\");\n    i0.ɵɵtemplate(1, DisplayInboundBreaksAssignationsComponent_article_3_ul_1_Template, 8, 5, \"ul\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows.agentsAssignationResume);\n} }\nvar DisplayInboundBreaksAssignationsComponent = /** @class */ (function () {\n    function DisplayInboundBreaksAssignationsComponent(modalService) {\n        this.modalService = modalService;\n    }\n    DisplayInboundBreaksAssignationsComponent.prototype.ngOnInit = function () { };\n    DisplayInboundBreaksAssignationsComponent.prototype.openModal = function (content) {\n        this.modalService.open(content, {\n            size: \"lg\",\n            ariaLabelledBy: \"modal-basic-title\"\n        });\n    };\n    DisplayInboundBreaksAssignationsComponent.prototype.selectLine = function (content, id) {\n        this.userSelection.selected_break = id;\n        this.modalService.open(content, {\n            size: \"lg\",\n            ariaLabelledBy: \"modal-basic-title\"\n        });\n        // console.error('name',id, this.userSelection);\n    };\n    DisplayInboundBreaksAssignationsComponent.ɵfac = function DisplayInboundBreaksAssignationsComponent_Factory(t) { return new (t || DisplayInboundBreaksAssignationsComponent)(i0.ɵɵdirectiveInject(i1.NgbModal)); };\n    DisplayInboundBreaksAssignationsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DisplayInboundBreaksAssignationsComponent, selectors: [[\"app-display-inbound-breaks-assignations\"]], inputs: { rows: \"rows\", userSelection: \"userSelection\" }, decls: 4, vars: 2, consts: [[1, \"main\"], [\"class\", \"subtitles\", 4, \"ngIf\"], [1, \"indicadores\"], [4, \"ngIf\"], [1, \"subtitles\"], [\"class\", \"inidcadores-items\", 4, \"ngFor\", \"ngForOf\"], [1, \"inidcadores-items\"], [1, \"indicadores-cantidad\", 3, \"click\"], [1, \"indicadores-descripcion\", 3, \"click\"], [1, \"indicadores-porcentaje\", 3, \"click\"]], template: function DisplayInboundBreaksAssignationsComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"section\", 0);\n            i0.ɵɵtemplate(1, DisplayInboundBreaksAssignationsComponent_p_1_Template, 2, 0, \"p\", 1);\n            i0.ɵɵelementStart(2, \"section\", 2);\n            i0.ɵɵtemplate(3, DisplayInboundBreaksAssignationsComponent_article_3_Template, 2, 1, \"article\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.agentsAssignationResume[0] !== undefined);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.rows.agentsAssignationResume);\n        } }, directives: [i2.NgIf, i2.NgForOf], pipes: [i3.ShortNamesPipe], styles: [\"main[_ngcontent-%COMP%]{padding:3px}.frame[_ngcontent-%COMP%]{border:1px solid #d3d3d3;min-height:50vh;border-radius:5px;page-break-after:3px}.subtitles[_ngcontent-%COMP%]{padding:3px 0 .5rem;background:#d3d3d3;font-size:1.2rem;font-weight:400;text-align:center}.indicadores[_ngcontent-%COMP%]{margin:10px 10px 3px;font-size:1rem;color:gray}.indicadores[_ngcontent-%COMP%]   .inidcadores-items[_ngcontent-%COMP%]{display:grid;grid-template-columns:1.5fr 5fr 2fr}.indicadores[_ngcontent-%COMP%]   .indicadores-cantidad[_ngcontent-%COMP%], .indicadores[_ngcontent-%COMP%]   .indicadores-descripcion[_ngcontent-%COMP%]{color:gray}.indicadores[_ngcontent-%COMP%]   .indicadores-porcentaje[_ngcontent-%COMP%]{color:#000}.pointer[_ngcontent-%COMP%]{cursor:pointer}li[_ngcontent-%COMP%], ul[_ngcontent-%COMP%]{padding:0;margin:0}\"] });\n    return DisplayInboundBreaksAssignationsComponent;\n}());\nexport { DisplayInboundBreaksAssignationsComponent };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DisplayInboundBreaksAssignationsComponent, [{\n        type: Component,\n        args: [{\n                selector: \"app-display-inbound-breaks-assignations\",\n                templateUrl: \"./display-inbound-breaks-assignations.component.html\",\n                styleUrls: [\"./display-inbound-breaks-assignations.component.scss\"]\n            }]\n    }], function () { return [{ type: i1.NgbModal }]; }, { rows: [{\n            type: Input\n        }], userSelection: [{\n            type: Input\n        }] }); })();\n","<section class=\"main\">\n  <p class=\"subtitles\" *ngIf=\"rows.agentsAssignationResume[0] !== undefined\">\n    Agentes en\n    asignación</p>\n  <section class=\"indicadores\">\n    <article *ngIf=\"rows.agentsAssignationResume\">\n      <ul class=\"inidcadores-items\"\n          *ngFor=\"let item of rows.agentsAssignationResume\">\n        <li class=\"indicadores-cantidad \"\n            (click)=\"selectLine(assigned, item.id)\">\n          {{ item.value }}\n        </li>\n        <li class=\"indicadores-descripcion \"\n            (click)=\"selectLine(assigned, item.id)\">\n          {{ item.name | shortNames}}\n        </li>\n        <li class=\"indicadores-porcentaje \"\n            (click)=\"selectLine(assigned, item.id)\">\n          {{ item.duration }}\n        </li>\n      </ul>\n    </article>\n  </section>\n</section>"],"sourceRoot":"webpack:///"}